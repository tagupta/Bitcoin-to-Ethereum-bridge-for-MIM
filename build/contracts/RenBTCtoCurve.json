{
  "contractName": "RenBTCtoCurve",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "curveFi_CRVMinter",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "curveFi_CRVToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "curveFi_LPGauge",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "curveFi_LPToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "curveFi_Swap",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_swapContract",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_gaugeContract",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_minterContract",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_lpContract",
          "type": "address"
        }
      ],
      "name": "setup",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"curveFi_CRVMinter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"curveFi_CRVToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"curveFi_LPGauge\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"curveFi_LPToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"curveFi_Swap\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_swapContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_gaugeContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_minterContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_lpContract\",\"type\":\"address\"}],\"name\":\"setup\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setup(address,address,address,address)\":{\"params\":{\"_gaugeContract\":\"CurveFi Gauge contract for ren-pool\",\"_lpContract\":\"CurveFi LP token contract = CurveTokenV1\",\"_minterContract\":\"CurveFi CRV minter\",\"_swapContract\":\"CurveFi Deposit contract for ren-pool\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"setup(address,address,address,address)\":{\"notice\":\"Set CurveFi contracts addresses\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/D/BlockChain/Ethereum-201/Ren-project/contracts/RenBTCtoCurve.sol\":\"RenBTCtoCurve\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/D/BlockChain/Ethereum-201/Ren-project/contracts/RenBTCtoCurve.sol\":{\"keccak256\":\"0x3792340a79c05eb40218791612a54d272305b03978254f8995b2113733e2bc33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac53a7101169502b56e45efbb83ce9c159a238301bee0da898014d0bf35bdc5f\",\"dweb:/ipfs/Qmbo2eAfxTH876ZGSkxpDCXVfsb8WZeWoVJ7ERrRG1AcKT\"]},\"/D/BlockChain/Ethereum-201/Ren-project/contracts/curvefi/ICurveFi_Gauge.sol\":{\"keccak256\":\"0xd4cb9e3b8b7bf442f214a455ad332ab7d1332f2f5c9fb37a2b26709a20062082\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://780c3dcd22529d27e36457f9773a8ed349f72ad570df9a3978f4f12c7c6b65e2\",\"dweb:/ipfs/QmNTucfho2mTa9m7nyDQBRo726iREwTC6heWVrdagGo4fF\"]},\"/D/BlockChain/Ethereum-201/Ren-project/contracts/curvefi/ICurveFi_Minter.sol\":{\"keccak256\":\"0x33662a16fc8d56eb00154ee5f472114dae17ed91d05bbaeb9c3214cd4c08c1bb\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://d0ac157f419409de5fe6285a934dfc26381bdfc6e3347d5957824d481a02a8a1\",\"dweb:/ipfs/QmSHVMNFzNREDfmxkHW7dJyafv54SC28s7BipkZZf7tsQ2\"]},\"/D/BlockChain/Ethereum-201/Ren-project/contracts/curvefi/ICurveFi_StableSwapRen.sol\":{\"keccak256\":\"0x860f6562c73eadd3c588000b432c8b7c51ae14b0e6669b8fa719f019076efa9c\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://24607b4e389865ed5f18d8fbe334c058c55f29056e40068af346268c35db8642\",\"dweb:/ipfs/QmNfd25uSndsuKjT2yvxRL6DDLTG2yzhtCWYJQAb2mH96Q\"]},\"/D/BlockChain/Ethereum-201/Ren-project/contracts/curvefi/IRenERC20.sol\":{\"keccak256\":\"0xb515cab7f08a19f56b78b57c4a62e42e001708f44a12e8e397d031190835883d\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://c8200561f74dcec648c36899974ad42b48bd4d46a0bc60b19dbdb33894c46b20\",\"dweb:/ipfs/QmXDjDgkRSJgRNEUuQeFueGncnxx4QtLuLHNVpWsqYqpJe\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x6bb804a310218875e89d12c053e94a13a4607cdf7cc2052f3e52bd32a0dc50a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2ebbbe6d0011175bd9e7268b83de3f9c2f9d8d4cbfbaef12aff977d7d727163\",\"dweb:/ipfs/Qmd5c7Vxtis9wzkDNhxwc6A2QT5H9xn9kfjhx7qx44vpro\"]},\"@openzeppelin/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x8b2abd85d0ece7e866e100e9d47ca9cbec93c87cf71a8d267b2b93eb81f7d5e9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fe9fa1beb63e4a09637701f783982ba80380d630d600c9cafe26b68bf58be1b2\",\"dweb:/ipfs/QmRA3GXhTWys88joD9x8xYhdjzvGwmDGLMMzGw3LxbSEge\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xb03df8481a954604ad0c9125680893b2e3f7ff770fe470e38b89ac61b84e8072\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b34655953d18ba3a45b762fb6bdbb6549af69a27435e10ece178742bf70baf45\",\"dweb:/ipfs/QmcqjUoFLLMyx7dbwSHUnDBH6aphkVHXWQvQRRev5EAWEh\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://087318b21c528119f649899f5b5580566dd8d7b0303d4904bd0e8580c3545f14\",\"dweb:/ipfs/Qmbn5Mj7aUn8hJuQ8VrQjjEXRsXyJKykgnjR9p4C3nfLtL\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x83fe24f5c04a56091e50f4a345ff504c8bff658a76d4c43b16878c8f940c53b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4c3df1a7ca104b633a7d81c6c6f5192367d150cd5a32cba81f7f27012729013\",\"dweb:/ipfs/QmSim72e3ZVsfgZt8UceCvbiSuMRHR6WDsiamqNzZahGSY\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x02348b2e4b9f3200c7e3907c5c2661643a6d8520e9f79939fbb9b4005a54894d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d41d627f4ef9c6006df8c2d01227d3cf4a6c3359b5704c629d88933272eecadd\",\"dweb:/ipfs/QmYDo7MvMsvuDxuJZ9RC9zFganS3Tm8RYzSmBP5qSmJfuY\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x3336baae5cf23e94274d75336e2d412193be508504aee185e61dc7d58cd05c8a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39a05eec7083dfa0cc7e0cbfe6cd1bd085a340af1ede93fdff3ad047c5fb3d8e\",\"dweb:/ipfs/QmVApz5fCUq2QC8gKTsNNdCmcedJ3ETHp68zR5N3WUKS4r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x90565a39ae45c80f0468dc96c7b20d0afc3055f344c8203a0c9258239f350b9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26e8b38a7ac8e7b4463af00cf7fff1bf48ae9875765bf4f7751e100124d0bc8c\",\"dweb:/ipfs/QmWcsmkVr24xmmjfnBQZoemFniXjj3vwT78Cz6uqZW1Hux\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6100ff565b600033905090565b60008060029054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600060026101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610c2c8061010e6000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80638141d266116100665780638141d266146100fa5780638da5cb5b14610118578063a3477c3614610136578063e011262a14610154578063f2fde38b1461017257610093565b80631c6004161461009857806354c35a3c146100b6578063715018a6146100d25780637c241146146100dc575b600080fd5b6100a061018e565b6040516100ad9190610b01565b60405180910390f35b6100d060048036038101906100cb9190610943565b6101b4565b005b6100da6105b9565b005b6100e4610641565b6040516100f19190610b01565b60405180910390f35b610102610667565b60405161010f9190610b01565b60405180910390f35b61012061068d565b60405161012d9190610b01565b60405180910390f35b61013e6106b6565b60405161014b9190610b01565b60405180910390f35b61015c6106dc565b6040516101699190610b01565b60405180910390f35b61018c600480360381019061018791906108f1565b610702565b005b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6101bc6107fa565b73ffffffffffffffffffffffffffffffffffffffff166101da61068d565b73ffffffffffffffffffffffffffffffffffffffff1614610230576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022790610b3c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614156102a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161029790610b5c565b60405180910390fd5b83600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166382c630666040518163ffffffff1660e01b815260040160206040518083038186803b15801561040457600080fd5b505afa158015610418573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061043c919061091a565b73ffffffffffffffffffffffffffffffffffffffff1614610492576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048990610b7c565b60405180910390fd5b81600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166376d8b1176040518163ffffffff1660e01b815260040160206040518083038186803b15801561053b57600080fd5b505afa15801561054f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610573919061091a565b600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b6105c16107fa565b73ffffffffffffffffffffffffffffffffffffffff166105df61068d565b73ffffffffffffffffffffffffffffffffffffffff1614610635576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062c90610b3c565b60405180910390fd5b61063f6000610802565b565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060029054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61070a6107fa565b73ffffffffffffffffffffffffffffffffffffffff1661072861068d565b73ffffffffffffffffffffffffffffffffffffffff161461077e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077590610b3c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156107ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107e590610b1c565b60405180910390fd5b6107f781610802565b50565b600033905090565b60008060029054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600060026101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000813590506108d681610bdf565b92915050565b6000815190506108eb81610bdf565b92915050565b60006020828403121561090357600080fd5b6000610911848285016108c7565b91505092915050565b60006020828403121561092c57600080fd5b600061093a848285016108dc565b91505092915050565b6000806000806080858703121561095957600080fd5b6000610967878288016108c7565b9450506020610978878288016108c7565b9350506040610989878288016108c7565b925050606061099a878288016108c7565b91505092959194509250565b6109af81610bad565b82525050565b60006109c2602683610b9c565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610a28602083610b9c565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b6000610a68602583610b9c565b91507f496e636f727265637420537461626c655377617020636f6e747261637420616460008301527f64726573730000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610ace601e83610b9c565b91507f43757276654669204c5020746f6b656e7320646f206e6f74206d6174636800006000830152602082019050919050565b6000602082019050610b1660008301846109a6565b92915050565b60006020820190508181036000830152610b35816109b5565b9050919050565b60006020820190508181036000830152610b5581610a1b565b9050919050565b60006020820190508181036000830152610b7581610a5b565b9050919050565b60006020820190508181036000830152610b9581610ac1565b9050919050565b600082825260208201905092915050565b6000610bb882610bbf565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b610be881610bad565b8114610bf357600080fd5b5056fea26469706673582212200f07069e5256e069045cdb853fcc53caf8f08ad555c88f5523044116e352103064736f6c63430008000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100935760003560e01c80638141d266116100665780638141d266146100fa5780638da5cb5b14610118578063a3477c3614610136578063e011262a14610154578063f2fde38b1461017257610093565b80631c6004161461009857806354c35a3c146100b6578063715018a6146100d25780637c241146146100dc575b600080fd5b6100a061018e565b6040516100ad9190610b01565b60405180910390f35b6100d060048036038101906100cb9190610943565b6101b4565b005b6100da6105b9565b005b6100e4610641565b6040516100f19190610b01565b60405180910390f35b610102610667565b60405161010f9190610b01565b60405180910390f35b61012061068d565b60405161012d9190610b01565b60405180910390f35b61013e6106b6565b60405161014b9190610b01565b60405180910390f35b61015c6106dc565b6040516101699190610b01565b60405180910390f35b61018c600480360381019061018791906108f1565b610702565b005b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6101bc6107fa565b73ffffffffffffffffffffffffffffffffffffffff166101da61068d565b73ffffffffffffffffffffffffffffffffffffffff1614610230576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022790610b3c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614156102a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161029790610b5c565b60405180910390fd5b83600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166382c630666040518163ffffffff1660e01b815260040160206040518083038186803b15801561040457600080fd5b505afa158015610418573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061043c919061091a565b73ffffffffffffffffffffffffffffffffffffffff1614610492576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048990610b7c565b60405180910390fd5b81600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166376d8b1176040518163ffffffff1660e01b815260040160206040518083038186803b15801561053b57600080fd5b505afa15801561054f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610573919061091a565b600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b6105c16107fa565b73ffffffffffffffffffffffffffffffffffffffff166105df61068d565b73ffffffffffffffffffffffffffffffffffffffff1614610635576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062c90610b3c565b60405180910390fd5b61063f6000610802565b565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060029054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61070a6107fa565b73ffffffffffffffffffffffffffffffffffffffff1661072861068d565b73ffffffffffffffffffffffffffffffffffffffff161461077e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077590610b3c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156107ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107e590610b1c565b60405180910390fd5b6107f781610802565b50565b600033905090565b60008060029054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600060026101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000813590506108d681610bdf565b92915050565b6000815190506108eb81610bdf565b92915050565b60006020828403121561090357600080fd5b6000610911848285016108c7565b91505092915050565b60006020828403121561092c57600080fd5b600061093a848285016108dc565b91505092915050565b6000806000806080858703121561095957600080fd5b6000610967878288016108c7565b9450506020610978878288016108c7565b9350506040610989878288016108c7565b925050606061099a878288016108c7565b91505092959194509250565b6109af81610bad565b82525050565b60006109c2602683610b9c565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610a28602083610b9c565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b6000610a68602583610b9c565b91507f496e636f727265637420537461626c655377617020636f6e747261637420616460008301527f64726573730000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610ace601e83610b9c565b91507f43757276654669204c5020746f6b656e7320646f206e6f74206d6174636800006000830152602082019050919050565b6000602082019050610b1660008301846109a6565b92915050565b60006020820190508181036000830152610b35816109b5565b9050919050565b60006020820190508181036000830152610b5581610a1b565b9050919050565b60006020820190508181036000830152610b7581610a5b565b9050919050565b60006020820190508181036000830152610b9581610ac1565b9050919050565b600082825260208201905092915050565b6000610bb882610bbf565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b610be881610bad565b8114610bf357600080fd5b5056fea26469706673582212200f07069e5256e069045cdb853fcc53caf8f08ad555c88f5523044116e352103064736f6c63430008000033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:5570:18",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "59:87:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "69:29:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "91:6:18"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "78:12:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "78:20:18"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "69:5:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "134:5:18"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "107:26:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "107:33:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "107:33:18"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "37:6:18",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "45:3:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:18",
                "type": ""
              }
            ],
            "src": "7:139:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "215:80:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "225:22:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "240:6:18"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "234:5:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "234:13:18"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "225:5:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "283:5:18"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "256:26:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "256:33:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "256:33:18"
                }
              ]
            },
            "name": "abi_decode_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "193:6:18",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "201:3:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "209:5:18",
                "type": ""
              }
            ],
            "src": "152:143:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "367:196:18",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "413:16:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "422:1:18",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "425:1:18",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "415:6:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "415:12:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "415:12:18"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "388:7:18"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "397:9:18"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "384:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "384:23:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "409:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "380:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "380:32:18"
                  },
                  "nodeType": "YulIf",
                  "src": "377:2:18"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "439:117:18",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "454:15:18",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "468:1:18",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "458:6:18",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "483:63:18",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "518:9:18"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "529:6:18"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "514:3:18"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "514:22:18"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "538:7:18"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "493:20:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "493:53:18"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "483:6:18"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "337:9:18",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "348:7:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "360:6:18",
                "type": ""
              }
            ],
            "src": "301:262:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "646:207:18",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "692:16:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "701:1:18",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "704:1:18",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "694:6:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "694:12:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "694:12:18"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "667:7:18"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "676:9:18"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "663:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "663:23:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "688:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "659:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "659:32:18"
                  },
                  "nodeType": "YulIf",
                  "src": "656:2:18"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "718:128:18",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "733:15:18",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "747:1:18",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "737:6:18",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "762:74:18",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "808:9:18"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "819:6:18"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "804:3:18"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "804:22:18"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "828:7:18"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "772:31:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "772:64:18"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "762:6:18"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "616:9:18",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "627:7:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "639:6:18",
                "type": ""
              }
            ],
            "src": "569:284:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "976:581:18",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1023:16:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1032:1:18",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1035:1:18",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1025:6:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1025:12:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1025:12:18"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "997:7:18"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1006:9:18"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "993:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "993:23:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1018:3:18",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "989:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "989:33:18"
                  },
                  "nodeType": "YulIf",
                  "src": "986:2:18"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1049:117:18",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1064:15:18",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1078:1:18",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1068:6:18",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1093:63:18",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1128:9:18"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1139:6:18"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1124:3:18"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1124:22:18"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1148:7:18"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1103:20:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1103:53:18"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1093:6:18"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1176:118:18",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1191:16:18",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1205:2:18",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1195:6:18",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1221:63:18",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1256:9:18"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1267:6:18"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1252:3:18"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1252:22:18"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1276:7:18"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1231:20:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1231:53:18"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1221:6:18"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1304:118:18",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1319:16:18",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1333:2:18",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1323:6:18",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1349:63:18",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1384:9:18"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1395:6:18"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1380:3:18"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1380:22:18"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1404:7:18"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1359:20:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1359:53:18"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "1349:6:18"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1432:118:18",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1447:16:18",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1461:2:18",
                        "type": "",
                        "value": "96"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1451:6:18",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1477:63:18",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1512:9:18"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1523:6:18"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1508:3:18"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1508:22:18"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1532:7:18"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1487:20:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1487:53:18"
                      },
                      "variableNames": [
                        {
                          "name": "value3",
                          "nodeType": "YulIdentifier",
                          "src": "1477:6:18"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "922:9:18",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "933:7:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "945:6:18",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "953:6:18",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "961:6:18",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "969:6:18",
                "type": ""
              }
            ],
            "src": "859:698:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1628:53:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1645:3:18"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1668:5:18"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1650:17:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1650:24:18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1638:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1638:37:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1638:37:18"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1616:5:18",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1623:3:18",
                "type": ""
              }
            ],
            "src": "1563:118:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1833:224:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1843:74:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1909:3:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1914:2:18",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1850:58:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1850:67:18"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "1843:3:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "1938:3:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1943:1:18",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1934:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1934:11:18"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1947:34:18",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1927:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1927:55:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1927:55:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "2003:3:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2008:2:18",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1999:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1999:12:18"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2013:8:18",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1992:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1992:30:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1992:30:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2032:19:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2043:3:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2048:2:18",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2039:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2039:12:18"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "2032:3:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1821:3:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1829:3:18",
                "type": ""
              }
            ],
            "src": "1687:370:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2209:184:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2219:74:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2285:3:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2290:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2226:58:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2226:67:18"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "2219:3:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "2314:3:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2319:1:18",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2310:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2310:11:18"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2323:34:18",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2303:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2303:55:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2303:55:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2368:19:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2379:3:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2384:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2375:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2375:12:18"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "2368:3:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2197:3:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2205:3:18",
                "type": ""
              }
            ],
            "src": "2063:330:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2545:223:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2555:74:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2621:3:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2626:2:18",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2562:58:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2562:67:18"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "2555:3:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "2650:3:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2655:1:18",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2646:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2646:11:18"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2659:34:18",
                        "type": "",
                        "value": "Incorrect StableSwap contract ad"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2639:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2639:55:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2639:55:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "2715:3:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2720:2:18",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2711:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2711:12:18"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2725:7:18",
                        "type": "",
                        "value": "dress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2704:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2704:29:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2704:29:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2743:19:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2754:3:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2759:2:18",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2750:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2750:12:18"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "2743:3:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_9fc8fd33fc0f9203bdad9aeeec4a829d050b7137db6b341d64713340300f2a30_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2533:3:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2541:3:18",
                "type": ""
              }
            ],
            "src": "2399:369:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2920:182:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2930:74:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2996:3:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3001:2:18",
                        "type": "",
                        "value": "30"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2937:58:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2937:67:18"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "2930:3:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "3025:3:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3030:1:18",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3021:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3021:11:18"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3034:32:18",
                        "type": "",
                        "value": "CurveFi LP tokens do not match"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3014:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3014:53:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3014:53:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3077:19:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3088:3:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3093:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3084:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3084:12:18"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3077:3:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_f3f254d31744ebd6cca8d79070441ae508dc7b21fbef0b4465ac6dfd55f9ed1f_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2908:3:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2916:3:18",
                "type": ""
              }
            ],
            "src": "2774:328:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3206:124:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3216:26:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3228:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3239:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3224:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3224:18:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3216:4:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3296:6:18"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3309:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3320:1:18",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3305:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3305:17:18"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3252:43:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3252:71:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3252:71:18"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3178:9:18",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3190:6:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3201:4:18",
                "type": ""
              }
            ],
            "src": "3108:222:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3507:248:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3517:26:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3529:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3540:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3525:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3525:18:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3517:4:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3564:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3575:1:18",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3560:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3560:17:18"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "3583:4:18"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3589:9:18"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3579:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3579:20:18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3553:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3553:47:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3553:47:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3609:139:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "3743:4:18"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3617:124:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3617:131:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3609:4:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3487:9:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3502:4:18",
                "type": ""
              }
            ],
            "src": "3336:419:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3932:248:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3942:26:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3954:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3965:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3950:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3950:18:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3942:4:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3989:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4000:1:18",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3985:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3985:17:18"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "4008:4:18"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4014:9:18"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4004:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4004:20:18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3978:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3978:47:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3978:47:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4034:139:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "4168:4:18"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4042:124:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4042:131:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4034:4:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3912:9:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3927:4:18",
                "type": ""
              }
            ],
            "src": "3761:419:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4357:248:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4367:26:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4379:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4390:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4375:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4375:18:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4367:4:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4414:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4425:1:18",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4410:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4410:17:18"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "4433:4:18"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4439:9:18"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4429:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4429:20:18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4403:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4403:47:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4403:47:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4459:139:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "4593:4:18"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_9fc8fd33fc0f9203bdad9aeeec4a829d050b7137db6b341d64713340300f2a30_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4467:124:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4467:131:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4459:4:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9fc8fd33fc0f9203bdad9aeeec4a829d050b7137db6b341d64713340300f2a30__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4337:9:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4352:4:18",
                "type": ""
              }
            ],
            "src": "4186:419:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4782:248:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4792:26:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4804:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4815:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4800:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4800:18:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4792:4:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4839:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4850:1:18",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4835:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4835:17:18"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "4858:4:18"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4864:9:18"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4854:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4854:20:18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4828:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4828:47:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4828:47:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4884:139:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "5018:4:18"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_f3f254d31744ebd6cca8d79070441ae508dc7b21fbef0b4465ac6dfd55f9ed1f_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4892:124:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4892:131:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4884:4:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f3f254d31744ebd6cca8d79070441ae508dc7b21fbef0b4465ac6dfd55f9ed1f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4762:9:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4777:4:18",
                "type": ""
              }
            ],
            "src": "4611:419:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5132:73:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5149:3:18"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5154:6:18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5142:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5142:19:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5142:19:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5170:29:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5189:3:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5194:4:18",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5185:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5185:14:18"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "5170:11:18"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5104:3:18",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "5109:6:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "5120:11:18",
                "type": ""
              }
            ],
            "src": "5036:169:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5256:51:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5266:35:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5295:5:18"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "5277:17:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5277:24:18"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "5266:7:18"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5238:5:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "5248:7:18",
                "type": ""
              }
            ],
            "src": "5211:96:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5358:81:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5368:65:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5383:5:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5390:42:18",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "5379:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5379:54:18"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "5368:7:18"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5340:5:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "5350:7:18",
                "type": ""
              }
            ],
            "src": "5313:126:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5488:79:18",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5545:16:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5554:1:18",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5557:1:18",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5547:6:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5547:12:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5547:12:18"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5511:5:18"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "5536:5:18"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "5518:17:18"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5518:24:18"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "5508:2:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5508:35:18"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "5501:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5501:43:18"
                  },
                  "nodeType": "YulIf",
                  "src": "5498:2:18"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5481:5:18",
                "type": ""
              }
            ],
            "src": "5445:122:18"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_addresst_address(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n\n        mstore(add(pos, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(pos, 32), \"ddress\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n\n        mstore(add(pos, 0), \"Ownable: caller is not the owner\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_9fc8fd33fc0f9203bdad9aeeec4a829d050b7137db6b341d64713340300f2a30_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n\n        mstore(add(pos, 0), \"Incorrect StableSwap contract ad\")\n\n        mstore(add(pos, 32), \"dress\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_f3f254d31744ebd6cca8d79070441ae508dc7b21fbef0b4465ac6dfd55f9ed1f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n\n        mstore(add(pos, 0), \"CurveFi LP tokens do not match\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9fc8fd33fc0f9203bdad9aeeec4a829d050b7137db6b341d64713340300f2a30__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9fc8fd33fc0f9203bdad9aeeec4a829d050b7137db6b341d64713340300f2a30_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_f3f254d31744ebd6cca8d79070441ae508dc7b21fbef0b4465ac6dfd55f9ed1f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f3f254d31744ebd6cca8d79070441ae508dc7b21fbef0b4465ac6dfd55f9ed1f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 18,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "593:1312:0:-:0;;;;;;;;;;;;;867:23:6;877:12;:10;;;:12;;:::i;:::-;867:9;;;:23;;:::i;:::-;593:1312:0;;587:96:13;640:7;666:10;659:17;;587:96;:::o;2041:169:6:-;2096:16;2115:6;;;;;;;;;;;2096:25;;2140:8;2131:6;;:17;;;;;;;;;;;;;;;;;;2194:8;2163:40;;2184:8;2163:40;;;;;;;;;;;;2041:169;;:::o;593:1312:0:-;;;;;;;",
  "deployedSourceMap": "593:1312:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;683:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1192:710;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1605:92:6;;;:::i;:::-;;791:32:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;830:31;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;973:85:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;717:30:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;754;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1846:189:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;683:27:0;;;;;;;;;;;;;:::o;1192:710::-;1196:12:6;:10;:12::i;:::-;1185:23;;:7;:5;:7::i;:::-;:23;;;1177:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1471:1:0::1;1446:27;;:13;:27;;;;1438:77;;;;;;;;;;;;:::i;:::-;;;;;;;;;1543:13;1528:12;;:28;;;;;;;;;;;;;;;;;;1585:14;1567:15;;:32;;;;;;;;;;;;;;;;;;1628:11;1610:15;;:29;;;;;;;;;;;;;;;;;;1714:15;;;;;;;;;;;1660:70;;1675:15;;;;;;;;;;;1660:40;;;:42;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:70;;;1652:113;;;;;;;;;;;;:::i;:::-;;;;;;;;;1806:15;1786:17;;:35;;;;;;;;;;;;;;;;;;1866:15;;;;;;;;;;;1851:41;;;:43;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1832:16;;:62;;;;;;;;;;;;;;;;;;1192:710:::0;;;;:::o;1605:92:6:-;1196:12;:10;:12::i;:::-;1185:23;;:7;:5;:7::i;:::-;:23;;;1177:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1669:21:::1;1687:1;1669:9;:21::i;:::-;1605:92::o:0;791:32:0:-;;;;;;;;;;;;;:::o;830:31::-;;;;;;;;;;;;;:::o;973:85:6:-;1019:7;1045:6;;;;;;;;;;;1038:13;;973:85;:::o;717:30:0:-;;;;;;;;;;;;;:::o;754:::-;;;;;;;;;;;;;:::o;1846:189:6:-;1196:12;:10;:12::i;:::-;1185:23;;:7;:5;:7::i;:::-;:23;;;1177:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1954:1:::1;1934:22;;:8;:22;;;;1926:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2009:19;2019:8;2009:9;:19::i;:::-;1846:189:::0;:::o;587:96:13:-;640:7;666:10;659:17;;587:96;:::o;2041:169:6:-;2096:16;2115:6;;;;;;;;;;;2096:25;;2140:8;2131:6;;:17;;;;;;;;;;;;;;;;;;2194:8;2163:40;;2184:8;2163:40;;;;;;;;;;;;2041:169;;:::o;7:139:18:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:143::-;;240:6;234:13;225:22;;256:33;283:5;256:33;:::i;:::-;215:80;;;;:::o;301:262::-;;409:2;397:9;388:7;384:23;380:32;377:2;;;425:1;422;415:12;377:2;468:1;493:53;538:7;529:6;518:9;514:22;493:53;:::i;:::-;483:63;;439:117;367:196;;;;:::o;569:284::-;;688:2;676:9;667:7;663:23;659:32;656:2;;;704:1;701;694:12;656:2;747:1;772:64;828:7;819:6;808:9;804:22;772:64;:::i;:::-;762:74;;718:128;646:207;;;;:::o;859:698::-;;;;;1018:3;1006:9;997:7;993:23;989:33;986:2;;;1035:1;1032;1025:12;986:2;1078:1;1103:53;1148:7;1139:6;1128:9;1124:22;1103:53;:::i;:::-;1093:63;;1049:117;1205:2;1231:53;1276:7;1267:6;1256:9;1252:22;1231:53;:::i;:::-;1221:63;;1176:118;1333:2;1359:53;1404:7;1395:6;1384:9;1380:22;1359:53;:::i;:::-;1349:63;;1304:118;1461:2;1487:53;1532:7;1523:6;1512:9;1508:22;1487:53;:::i;:::-;1477:63;;1432:118;976:581;;;;;;;:::o;1563:118::-;1650:24;1668:5;1650:24;:::i;:::-;1645:3;1638:37;1628:53;;:::o;1687:370::-;;1850:67;1914:2;1909:3;1850:67;:::i;:::-;1843:74;;1947:34;1943:1;1938:3;1934:11;1927:55;2013:8;2008:2;2003:3;1999:12;1992:30;2048:2;2043:3;2039:12;2032:19;;1833:224;;;:::o;2063:330::-;;2226:67;2290:2;2285:3;2226:67;:::i;:::-;2219:74;;2323:34;2319:1;2314:3;2310:11;2303:55;2384:2;2379:3;2375:12;2368:19;;2209:184;;;:::o;2399:369::-;;2562:67;2626:2;2621:3;2562:67;:::i;:::-;2555:74;;2659:34;2655:1;2650:3;2646:11;2639:55;2725:7;2720:2;2715:3;2711:12;2704:29;2759:2;2754:3;2750:12;2743:19;;2545:223;;;:::o;2774:328::-;;2937:67;3001:2;2996:3;2937:67;:::i;:::-;2930:74;;3034:32;3030:1;3025:3;3021:11;3014:53;3093:2;3088:3;3084:12;3077:19;;2920:182;;;:::o;3108:222::-;;3239:2;3228:9;3224:18;3216:26;;3252:71;3320:1;3309:9;3305:17;3296:6;3252:71;:::i;:::-;3206:124;;;;:::o;3336:419::-;;3540:2;3529:9;3525:18;3517:26;;3589:9;3583:4;3579:20;3575:1;3564:9;3560:17;3553:47;3617:131;3743:4;3617:131;:::i;:::-;3609:139;;3507:248;;;:::o;3761:419::-;;3965:2;3954:9;3950:18;3942:26;;4014:9;4008:4;4004:20;4000:1;3989:9;3985:17;3978:47;4042:131;4168:4;4042:131;:::i;:::-;4034:139;;3932:248;;;:::o;4186:419::-;;4390:2;4379:9;4375:18;4367:26;;4439:9;4433:4;4429:20;4425:1;4414:9;4410:17;4403:47;4467:131;4593:4;4467:131;:::i;:::-;4459:139;;4357:248;;;:::o;4611:419::-;;4815:2;4804:9;4800:18;4792:26;;4864:9;4858:4;4854:20;4850:1;4839:9;4835:17;4828:47;4892:131;5018:4;4892:131;:::i;:::-;4884:139;;4782:248;;;:::o;5036:169::-;;5154:6;5149:3;5142:19;5194:4;5189:3;5185:14;5170:29;;5132:73;;;;:::o;5211:96::-;;5277:24;5295:5;5277:24;:::i;:::-;5266:35;;5256:51;;;:::o;5313:126::-;;5390:42;5383:5;5379:54;5368:65;;5358:81;;;:::o;5445:122::-;5518:24;5536:5;5518:24;:::i;:::-;5511:5;5508:35;5498:2;;5557:1;5554;5547:12;5498:2;5488:79;:::o",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity >=0.4.22 <0.9.0;\r\n\r\nimport '@openzeppelin/contracts/proxy/utils/Initializable.sol';\r\nimport '@openzeppelin/contracts/utils/Context.sol';\r\nimport '@openzeppelin/contracts/access/Ownable.sol';\r\n\r\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\r\nimport '@openzeppelin/contracts/token/ERC20/ERC20.sol';\r\nimport '@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol';\r\n\r\nimport './curvefi/ICurveFi_StableSwapRen.sol';\r\nimport './curvefi/ICurveFi_Gauge.sol';\r\nimport './curvefi/ICurveFi_Minter.sol';\r\nimport './curvefi/IRenERC20.sol';\r\n\r\ncontract RenBTCtoCurve is Initializable, Ownable{\r\n    using SafeERC20 for IERC20;\r\n\r\n    address public curveFi_Swap;\r\n    address public curveFi_LPToken;\r\n    address public curveFi_LPGauge;\r\n    address public curveFi_CRVMinter;\r\n    address public curveFi_CRVToken; \r\n\r\n    /**\r\n     * @notice Set CurveFi contracts addresses\r\n     * @param _swapContract CurveFi Deposit contract for ren-pool\r\n     * @param _gaugeContract CurveFi Gauge contract for ren-pool\r\n     * @param _minterContract CurveFi CRV minter\r\n     * @param _lpContract CurveFi LP token contract = CurveTokenV1\r\n     */\r\n        function setup( address _swapContract, \r\n                        address _gaugeContract, \r\n                        address _minterContract, \r\n                        address _lpContract ) \r\n                        external onlyOwner {\r\n\r\n        require(_swapContract != address(0), \"Incorrect StableSwap contract address\");\r\n\r\n        curveFi_Swap = _swapContract;\r\n        curveFi_LPGauge = _gaugeContract;\r\n        curveFi_LPToken = _lpContract;\r\n\r\n        require(ICurveFi_Gauge(curveFi_LPGauge).lp_token() == address(curveFi_LPToken), \"CurveFi LP tokens do not match\");        \r\n\r\n        curveFi_CRVMinter = _minterContract;\r\n        curveFi_CRVToken = ICurveFi_Gauge(curveFi_LPGauge).crv_token();\r\n    }\r\n}",
  "sourcePath": "D:/BlockChain/Ethereum-201/Ren-project/contracts/RenBTCtoCurve.sol",
  "ast": {
    "absolutePath": "/D/BlockChain/Ethereum-201/Ren-project/contracts/RenBTCtoCurve.sol",
    "exportedSymbols": {
      "Address": [
        1787
      ],
      "Context": [
        1809
      ],
      "ERC20": [
        1163
      ],
      "ICurveFi_Gauge": [
        318
      ],
      "ICurveFi_Minter": [
        345
      ],
      "ICurveFi_StableSwapRen": [
        398
      ],
      "IERC20": [
        1241
      ],
      "IERC20Metadata": [
        1266
      ],
      "IRenERC20": [
        467
      ],
      "Initializable": [
        617
      ],
      "Ownable": [
        571
      ],
      "RenBTCtoCurve": [
        93
      ],
      "SafeERC20": [
        1490
      ]
    },
    "id": 94,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:32:0"
      },
      {
        "absolutePath": "@openzeppelin/contracts/proxy/utils/Initializable.sol",
        "file": "@openzeppelin/contracts/proxy/utils/Initializable.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 94,
        "sourceUnit": 618,
        "src": "69:63:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
        "file": "@openzeppelin/contracts/utils/Context.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 94,
        "sourceUnit": 1810,
        "src": "134:51:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 94,
        "sourceUnit": 572,
        "src": "187:52:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 5,
        "nodeType": "ImportDirective",
        "scope": 94,
        "sourceUnit": 1242,
        "src": "243:56:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 6,
        "nodeType": "ImportDirective",
        "scope": 94,
        "sourceUnit": 1164,
        "src": "301:55:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "id": 7,
        "nodeType": "ImportDirective",
        "scope": 94,
        "sourceUnit": 1491,
        "src": "358:65:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/D/BlockChain/Ethereum-201/Ren-project/contracts/curvefi/ICurveFi_StableSwapRen.sol",
        "file": "./curvefi/ICurveFi_StableSwapRen.sol",
        "id": 8,
        "nodeType": "ImportDirective",
        "scope": 94,
        "sourceUnit": 399,
        "src": "427:46:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/D/BlockChain/Ethereum-201/Ren-project/contracts/curvefi/ICurveFi_Gauge.sol",
        "file": "./curvefi/ICurveFi_Gauge.sol",
        "id": 9,
        "nodeType": "ImportDirective",
        "scope": 94,
        "sourceUnit": 319,
        "src": "475:38:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/D/BlockChain/Ethereum-201/Ren-project/contracts/curvefi/ICurveFi_Minter.sol",
        "file": "./curvefi/ICurveFi_Minter.sol",
        "id": 10,
        "nodeType": "ImportDirective",
        "scope": 94,
        "sourceUnit": 346,
        "src": "515:39:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/D/BlockChain/Ethereum-201/Ren-project/contracts/curvefi/IRenERC20.sol",
        "file": "./curvefi/IRenERC20.sol",
        "id": 11,
        "nodeType": "ImportDirective",
        "scope": 94,
        "sourceUnit": 468,
        "src": "556:33:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 12,
              "name": "Initializable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 617,
              "src": "619:13:0"
            },
            "id": 13,
            "nodeType": "InheritanceSpecifier",
            "src": "619:13:0"
          },
          {
            "baseName": {
              "id": 14,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 571,
              "src": "634:7:0"
            },
            "id": 15,
            "nodeType": "InheritanceSpecifier",
            "src": "634:7:0"
          }
        ],
        "contractDependencies": [
          571,
          617,
          1809
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 93,
        "linearizedBaseContracts": [
          93,
          571,
          1809,
          617
        ],
        "name": "RenBTCtoCurve",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 19,
            "libraryName": {
              "id": 16,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1490,
              "src": "654:9:0"
            },
            "nodeType": "UsingForDirective",
            "src": "648:27:0",
            "typeName": {
              "id": 18,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 17,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1241,
                "src": "668:6:0"
              },
              "referencedDeclaration": 1241,
              "src": "668:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$1241",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "1c600416",
            "id": 21,
            "mutability": "mutable",
            "name": "curveFi_Swap",
            "nodeType": "VariableDeclaration",
            "scope": 93,
            "src": "683:27:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 20,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "683:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "a3477c36",
            "id": 23,
            "mutability": "mutable",
            "name": "curveFi_LPToken",
            "nodeType": "VariableDeclaration",
            "scope": 93,
            "src": "717:30:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 22,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "717:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "e011262a",
            "id": 25,
            "mutability": "mutable",
            "name": "curveFi_LPGauge",
            "nodeType": "VariableDeclaration",
            "scope": 93,
            "src": "754:30:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 24,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "754:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "7c241146",
            "id": 27,
            "mutability": "mutable",
            "name": "curveFi_CRVMinter",
            "nodeType": "VariableDeclaration",
            "scope": 93,
            "src": "791:32:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 26,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "791:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8141d266",
            "id": 29,
            "mutability": "mutable",
            "name": "curveFi_CRVToken",
            "nodeType": "VariableDeclaration",
            "scope": 93,
            "src": "830:31:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 28,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "830:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 91,
              "nodeType": "Block",
              "src": "1425:477:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 49,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 44,
                          "name": "_swapContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32,
                          "src": "1446:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 47,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1471:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 46,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1463:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 45,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1463:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 48,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1463:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1446:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e636f727265637420537461626c655377617020636f6e74726163742061646472657373",
                        "id": 50,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1475:39:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9fc8fd33fc0f9203bdad9aeeec4a829d050b7137db6b341d64713340300f2a30",
                          "typeString": "literal_string \"Incorrect StableSwap contract address\""
                        },
                        "value": "Incorrect StableSwap contract address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9fc8fd33fc0f9203bdad9aeeec4a829d050b7137db6b341d64713340300f2a30",
                          "typeString": "literal_string \"Incorrect StableSwap contract address\""
                        }
                      ],
                      "id": 43,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1438:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 51,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1438:77:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 52,
                  "nodeType": "ExpressionStatement",
                  "src": "1438:77:0"
                },
                {
                  "expression": {
                    "id": 55,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 53,
                      "name": "curveFi_Swap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21,
                      "src": "1528:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 54,
                      "name": "_swapContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32,
                      "src": "1543:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1528:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 56,
                  "nodeType": "ExpressionStatement",
                  "src": "1528:28:0"
                },
                {
                  "expression": {
                    "id": 59,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 57,
                      "name": "curveFi_LPGauge",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25,
                      "src": "1567:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 58,
                      "name": "_gaugeContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34,
                      "src": "1585:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1567:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 60,
                  "nodeType": "ExpressionStatement",
                  "src": "1567:32:0"
                },
                {
                  "expression": {
                    "id": 63,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 61,
                      "name": "curveFi_LPToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23,
                      "src": "1610:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 62,
                      "name": "_lpContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38,
                      "src": "1628:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1610:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 64,
                  "nodeType": "ExpressionStatement",
                  "src": "1610:29:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 75,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 67,
                                  "name": "curveFi_LPGauge",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 25,
                                  "src": "1675:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 66,
                                "name": "ICurveFi_Gauge",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 318,
                                "src": "1660:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ICurveFi_Gauge_$318_$",
                                  "typeString": "type(contract ICurveFi_Gauge)"
                                }
                              },
                              "id": 68,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1660:31:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ICurveFi_Gauge_$318",
                                "typeString": "contract ICurveFi_Gauge"
                              }
                            },
                            "id": 69,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "lp_token",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 262,
                            "src": "1660:40:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                              "typeString": "function () view external returns (address)"
                            }
                          },
                          "id": 70,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1660:42:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 73,
                              "name": "curveFi_LPToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23,
                              "src": "1714:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 72,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1706:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 71,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1706:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 74,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1706:24:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1660:70:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43757276654669204c5020746f6b656e7320646f206e6f74206d61746368",
                        "id": 76,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1732:32:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f3f254d31744ebd6cca8d79070441ae508dc7b21fbef0b4465ac6dfd55f9ed1f",
                          "typeString": "literal_string \"CurveFi LP tokens do not match\""
                        },
                        "value": "CurveFi LP tokens do not match"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f3f254d31744ebd6cca8d79070441ae508dc7b21fbef0b4465ac6dfd55f9ed1f",
                          "typeString": "literal_string \"CurveFi LP tokens do not match\""
                        }
                      ],
                      "id": 65,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1652:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 77,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1652:113:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78,
                  "nodeType": "ExpressionStatement",
                  "src": "1652:113:0"
                },
                {
                  "expression": {
                    "id": 81,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 79,
                      "name": "curveFi_CRVMinter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27,
                      "src": "1786:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 80,
                      "name": "_minterContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36,
                      "src": "1806:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1786:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 82,
                  "nodeType": "ExpressionStatement",
                  "src": "1786:35:0"
                },
                {
                  "expression": {
                    "id": 89,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 83,
                      "name": "curveFi_CRVToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29,
                      "src": "1832:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "arguments": [
                            {
                              "id": 85,
                              "name": "curveFi_LPGauge",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25,
                              "src": "1866:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 84,
                            "name": "ICurveFi_Gauge",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 318,
                            "src": "1851:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ICurveFi_Gauge_$318_$",
                              "typeString": "type(contract ICurveFi_Gauge)"
                            }
                          },
                          "id": 86,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1851:31:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ICurveFi_Gauge_$318",
                            "typeString": "contract ICurveFi_Gauge"
                          }
                        },
                        "id": 87,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "crv_token",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 267,
                        "src": "1851:41:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                          "typeString": "function () view external returns (address)"
                        }
                      },
                      "id": 88,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1851:43:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1832:62:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 90,
                  "nodeType": "ExpressionStatement",
                  "src": "1832:62:0"
                }
              ]
            },
            "documentation": {
              "id": 30,
              "nodeType": "StructuredDocumentation",
              "src": "871:311:0",
              "text": " @notice Set CurveFi contracts addresses\n @param _swapContract CurveFi Deposit contract for ren-pool\n @param _gaugeContract CurveFi Gauge contract for ren-pool\n @param _minterContract CurveFi CRV minter\n @param _lpContract CurveFi LP token contract = CurveTokenV1"
            },
            "functionSelector": "54c35a3c",
            "id": 92,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 41,
                "modifierName": {
                  "id": 40,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 514,
                  "src": "1415:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1415:9:0"
              }
            ],
            "name": "setup",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 39,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32,
                  "mutability": "mutable",
                  "name": "_swapContract",
                  "nodeType": "VariableDeclaration",
                  "scope": 92,
                  "src": "1208:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 31,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1208:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34,
                  "mutability": "mutable",
                  "name": "_gaugeContract",
                  "nodeType": "VariableDeclaration",
                  "scope": 92,
                  "src": "1257:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 33,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1257:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 36,
                  "mutability": "mutable",
                  "name": "_minterContract",
                  "nodeType": "VariableDeclaration",
                  "scope": 92,
                  "src": "1307:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 35,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1307:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38,
                  "mutability": "mutable",
                  "name": "_lpContract",
                  "nodeType": "VariableDeclaration",
                  "scope": 92,
                  "src": "1358:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 37,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1358:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1206:173:0"
            },
            "returnParameters": {
              "id": 42,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1425:0:0"
            },
            "scope": 93,
            "src": "1192:710:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 94,
        "src": "593:1312:0"
      }
    ],
    "src": "33:1872:0"
  },
  "legacyAST": {
    "absolutePath": "/D/BlockChain/Ethereum-201/Ren-project/contracts/RenBTCtoCurve.sol",
    "exportedSymbols": {
      "Address": [
        1787
      ],
      "Context": [
        1809
      ],
      "ERC20": [
        1163
      ],
      "ICurveFi_Gauge": [
        318
      ],
      "ICurveFi_Minter": [
        345
      ],
      "ICurveFi_StableSwapRen": [
        398
      ],
      "IERC20": [
        1241
      ],
      "IERC20Metadata": [
        1266
      ],
      "IRenERC20": [
        467
      ],
      "Initializable": [
        617
      ],
      "Ownable": [
        571
      ],
      "RenBTCtoCurve": [
        93
      ],
      "SafeERC20": [
        1490
      ]
    },
    "id": 94,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:32:0"
      },
      {
        "absolutePath": "@openzeppelin/contracts/proxy/utils/Initializable.sol",
        "file": "@openzeppelin/contracts/proxy/utils/Initializable.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 94,
        "sourceUnit": 618,
        "src": "69:63:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
        "file": "@openzeppelin/contracts/utils/Context.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 94,
        "sourceUnit": 1810,
        "src": "134:51:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 94,
        "sourceUnit": 572,
        "src": "187:52:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 5,
        "nodeType": "ImportDirective",
        "scope": 94,
        "sourceUnit": 1242,
        "src": "243:56:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 6,
        "nodeType": "ImportDirective",
        "scope": 94,
        "sourceUnit": 1164,
        "src": "301:55:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "id": 7,
        "nodeType": "ImportDirective",
        "scope": 94,
        "sourceUnit": 1491,
        "src": "358:65:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/D/BlockChain/Ethereum-201/Ren-project/contracts/curvefi/ICurveFi_StableSwapRen.sol",
        "file": "./curvefi/ICurveFi_StableSwapRen.sol",
        "id": 8,
        "nodeType": "ImportDirective",
        "scope": 94,
        "sourceUnit": 399,
        "src": "427:46:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/D/BlockChain/Ethereum-201/Ren-project/contracts/curvefi/ICurveFi_Gauge.sol",
        "file": "./curvefi/ICurveFi_Gauge.sol",
        "id": 9,
        "nodeType": "ImportDirective",
        "scope": 94,
        "sourceUnit": 319,
        "src": "475:38:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/D/BlockChain/Ethereum-201/Ren-project/contracts/curvefi/ICurveFi_Minter.sol",
        "file": "./curvefi/ICurveFi_Minter.sol",
        "id": 10,
        "nodeType": "ImportDirective",
        "scope": 94,
        "sourceUnit": 346,
        "src": "515:39:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/D/BlockChain/Ethereum-201/Ren-project/contracts/curvefi/IRenERC20.sol",
        "file": "./curvefi/IRenERC20.sol",
        "id": 11,
        "nodeType": "ImportDirective",
        "scope": 94,
        "sourceUnit": 468,
        "src": "556:33:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 12,
              "name": "Initializable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 617,
              "src": "619:13:0"
            },
            "id": 13,
            "nodeType": "InheritanceSpecifier",
            "src": "619:13:0"
          },
          {
            "baseName": {
              "id": 14,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 571,
              "src": "634:7:0"
            },
            "id": 15,
            "nodeType": "InheritanceSpecifier",
            "src": "634:7:0"
          }
        ],
        "contractDependencies": [
          571,
          617,
          1809
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 93,
        "linearizedBaseContracts": [
          93,
          571,
          1809,
          617
        ],
        "name": "RenBTCtoCurve",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 19,
            "libraryName": {
              "id": 16,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1490,
              "src": "654:9:0"
            },
            "nodeType": "UsingForDirective",
            "src": "648:27:0",
            "typeName": {
              "id": 18,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 17,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1241,
                "src": "668:6:0"
              },
              "referencedDeclaration": 1241,
              "src": "668:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$1241",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "1c600416",
            "id": 21,
            "mutability": "mutable",
            "name": "curveFi_Swap",
            "nodeType": "VariableDeclaration",
            "scope": 93,
            "src": "683:27:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 20,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "683:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "a3477c36",
            "id": 23,
            "mutability": "mutable",
            "name": "curveFi_LPToken",
            "nodeType": "VariableDeclaration",
            "scope": 93,
            "src": "717:30:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 22,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "717:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "e011262a",
            "id": 25,
            "mutability": "mutable",
            "name": "curveFi_LPGauge",
            "nodeType": "VariableDeclaration",
            "scope": 93,
            "src": "754:30:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 24,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "754:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "7c241146",
            "id": 27,
            "mutability": "mutable",
            "name": "curveFi_CRVMinter",
            "nodeType": "VariableDeclaration",
            "scope": 93,
            "src": "791:32:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 26,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "791:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8141d266",
            "id": 29,
            "mutability": "mutable",
            "name": "curveFi_CRVToken",
            "nodeType": "VariableDeclaration",
            "scope": 93,
            "src": "830:31:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 28,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "830:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 91,
              "nodeType": "Block",
              "src": "1425:477:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 49,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 44,
                          "name": "_swapContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32,
                          "src": "1446:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 47,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1471:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 46,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1463:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 45,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1463:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 48,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1463:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1446:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e636f727265637420537461626c655377617020636f6e74726163742061646472657373",
                        "id": 50,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1475:39:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9fc8fd33fc0f9203bdad9aeeec4a829d050b7137db6b341d64713340300f2a30",
                          "typeString": "literal_string \"Incorrect StableSwap contract address\""
                        },
                        "value": "Incorrect StableSwap contract address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9fc8fd33fc0f9203bdad9aeeec4a829d050b7137db6b341d64713340300f2a30",
                          "typeString": "literal_string \"Incorrect StableSwap contract address\""
                        }
                      ],
                      "id": 43,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1438:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 51,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1438:77:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 52,
                  "nodeType": "ExpressionStatement",
                  "src": "1438:77:0"
                },
                {
                  "expression": {
                    "id": 55,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 53,
                      "name": "curveFi_Swap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21,
                      "src": "1528:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 54,
                      "name": "_swapContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32,
                      "src": "1543:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1528:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 56,
                  "nodeType": "ExpressionStatement",
                  "src": "1528:28:0"
                },
                {
                  "expression": {
                    "id": 59,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 57,
                      "name": "curveFi_LPGauge",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25,
                      "src": "1567:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 58,
                      "name": "_gaugeContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34,
                      "src": "1585:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1567:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 60,
                  "nodeType": "ExpressionStatement",
                  "src": "1567:32:0"
                },
                {
                  "expression": {
                    "id": 63,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 61,
                      "name": "curveFi_LPToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23,
                      "src": "1610:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 62,
                      "name": "_lpContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38,
                      "src": "1628:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1610:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 64,
                  "nodeType": "ExpressionStatement",
                  "src": "1610:29:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 75,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 67,
                                  "name": "curveFi_LPGauge",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 25,
                                  "src": "1675:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 66,
                                "name": "ICurveFi_Gauge",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 318,
                                "src": "1660:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ICurveFi_Gauge_$318_$",
                                  "typeString": "type(contract ICurveFi_Gauge)"
                                }
                              },
                              "id": 68,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1660:31:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ICurveFi_Gauge_$318",
                                "typeString": "contract ICurveFi_Gauge"
                              }
                            },
                            "id": 69,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "lp_token",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 262,
                            "src": "1660:40:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                              "typeString": "function () view external returns (address)"
                            }
                          },
                          "id": 70,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1660:42:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 73,
                              "name": "curveFi_LPToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23,
                              "src": "1714:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 72,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1706:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 71,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1706:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 74,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1706:24:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1660:70:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43757276654669204c5020746f6b656e7320646f206e6f74206d61746368",
                        "id": 76,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1732:32:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f3f254d31744ebd6cca8d79070441ae508dc7b21fbef0b4465ac6dfd55f9ed1f",
                          "typeString": "literal_string \"CurveFi LP tokens do not match\""
                        },
                        "value": "CurveFi LP tokens do not match"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f3f254d31744ebd6cca8d79070441ae508dc7b21fbef0b4465ac6dfd55f9ed1f",
                          "typeString": "literal_string \"CurveFi LP tokens do not match\""
                        }
                      ],
                      "id": 65,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1652:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 77,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1652:113:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78,
                  "nodeType": "ExpressionStatement",
                  "src": "1652:113:0"
                },
                {
                  "expression": {
                    "id": 81,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 79,
                      "name": "curveFi_CRVMinter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27,
                      "src": "1786:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 80,
                      "name": "_minterContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36,
                      "src": "1806:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1786:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 82,
                  "nodeType": "ExpressionStatement",
                  "src": "1786:35:0"
                },
                {
                  "expression": {
                    "id": 89,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 83,
                      "name": "curveFi_CRVToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29,
                      "src": "1832:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "arguments": [
                            {
                              "id": 85,
                              "name": "curveFi_LPGauge",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25,
                              "src": "1866:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 84,
                            "name": "ICurveFi_Gauge",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 318,
                            "src": "1851:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ICurveFi_Gauge_$318_$",
                              "typeString": "type(contract ICurveFi_Gauge)"
                            }
                          },
                          "id": 86,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1851:31:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ICurveFi_Gauge_$318",
                            "typeString": "contract ICurveFi_Gauge"
                          }
                        },
                        "id": 87,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "crv_token",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 267,
                        "src": "1851:41:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                          "typeString": "function () view external returns (address)"
                        }
                      },
                      "id": 88,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1851:43:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1832:62:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 90,
                  "nodeType": "ExpressionStatement",
                  "src": "1832:62:0"
                }
              ]
            },
            "documentation": {
              "id": 30,
              "nodeType": "StructuredDocumentation",
              "src": "871:311:0",
              "text": " @notice Set CurveFi contracts addresses\n @param _swapContract CurveFi Deposit contract for ren-pool\n @param _gaugeContract CurveFi Gauge contract for ren-pool\n @param _minterContract CurveFi CRV minter\n @param _lpContract CurveFi LP token contract = CurveTokenV1"
            },
            "functionSelector": "54c35a3c",
            "id": 92,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 41,
                "modifierName": {
                  "id": 40,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 514,
                  "src": "1415:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1415:9:0"
              }
            ],
            "name": "setup",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 39,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32,
                  "mutability": "mutable",
                  "name": "_swapContract",
                  "nodeType": "VariableDeclaration",
                  "scope": 92,
                  "src": "1208:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 31,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1208:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34,
                  "mutability": "mutable",
                  "name": "_gaugeContract",
                  "nodeType": "VariableDeclaration",
                  "scope": 92,
                  "src": "1257:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 33,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1257:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 36,
                  "mutability": "mutable",
                  "name": "_minterContract",
                  "nodeType": "VariableDeclaration",
                  "scope": 92,
                  "src": "1307:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 35,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1307:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38,
                  "mutability": "mutable",
                  "name": "_lpContract",
                  "nodeType": "VariableDeclaration",
                  "scope": 92,
                  "src": "1358:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 37,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1358:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1206:173:0"
            },
            "returnParameters": {
              "id": 42,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1425:0:0"
            },
            "scope": 93,
            "src": "1192:710:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 94,
        "src": "593:1312:0"
      }
    ],
    "src": "33:1872:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.1",
  "updatedAt": "2021-10-21T13:55:28.409Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "setup(address,address,address,address)": {
        "params": {
          "_gaugeContract": "CurveFi Gauge contract for ren-pool",
          "_lpContract": "CurveFi LP token contract = CurveTokenV1",
          "_minterContract": "CurveFi CRV minter",
          "_swapContract": "CurveFi Deposit contract for ren-pool"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "setup(address,address,address,address)": {
        "notice": "Set CurveFi contracts addresses"
      }
    },
    "version": 1
  }
}