import { AxiosRequestConfig } from 'axios';
declare type Headers = Record<string, string | null | undefined>;
export declare function removeEmptyHeaders(headers: Headers): Headers;
export declare function configureHeaders(headers?: Headers, token?: string): Headers;
export declare function throwIfErrors(response: any): any;
export declare function deleteHeaders(opts: AxiosRequestConfig): AxiosRequestConfig;
export declare type LotusRpcEngineConfig = {
    apiAddress?: string;
    token?: string;
    axiosOpts?: AxiosRequestConfig;
};
export default class LotusRpcEngine {
    readonly apiAddress: string;
    readonly token?: string;
    readonly axiosOpts: AxiosRequestConfig;
    readonly headers: Headers;
    constructor(config?: LotusRpcEngineConfig);
    request<A = any>(method: string, ...params: any[]): Promise<A>;
}
export {};
//# sourceMappingURL=index.d.ts.map