"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.removeEmptyHeaders = removeEmptyHeaders;
exports.configureHeaders = configureHeaders;
exports.throwIfErrors = throwIfErrors;
exports.deleteHeaders = deleteHeaders;
exports["default"] = void 0;

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _axios = _interopRequireDefault(require("axios"));

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function removeEmptyHeaders(headers) {
  var newHeaders = {};
  Object.keys(headers).forEach(function (key) {
    if (headers[key]) newHeaders[key] = headers[key];
  });
  return newHeaders;
}

function configureHeaders() {
  var headers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var token = arguments.length > 1 ? arguments[1] : undefined;
  var reqHeaders = Object.assign({}, headers, {
    Accept: '*/*'
  });

  if (token) {
    reqHeaders.Authorization = "Bearer ".concat(token);
  }

  return removeEmptyHeaders(reqHeaders);
}

function throwIfErrors(response) {
  if (response.error) {
    if (response.error.message) throw new Error(response.error.message);else throw new Error('Unknown jsonrpc error');
  } else {
    return response;
  }
}

function deleteHeaders(opts) {
  delete opts.headers;
  return opts;
}

var LotusRpcEngine = /*#__PURE__*/function () {
  function LotusRpcEngine(config) {
    var _config$axiosOpts;

    (0, _classCallCheck2["default"])(this, LotusRpcEngine);
    (0, _defineProperty2["default"])(this, "apiAddress", void 0);
    (0, _defineProperty2["default"])(this, "token", void 0);
    (0, _defineProperty2["default"])(this, "axiosOpts", void 0);
    (0, _defineProperty2["default"])(this, "headers", void 0);
    if (!config) throw new Error('Must pass a config object to the LotusRpcEngine constructor.');
    this.apiAddress = config.apiAddress || 'http://127.0.0.1:1234/rpc/v0';
    this.token = config.token;
    this.headers = configureHeaders(config === null || config === void 0 ? void 0 : (_config$axiosOpts = config.axiosOpts) === null || _config$axiosOpts === void 0 ? void 0 : _config$axiosOpts.headers, config.token);
    this.axiosOpts = deleteHeaders(config.axiosOpts || {});
  }

  (0, _createClass2["default"])(LotusRpcEngine, [{
    key: "request",
    value: function () {
      var _request = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee(method) {
        var _len,
            params,
            _key,
            _yield$axios$post,
            data,
            _args = arguments;

        return _regenerator["default"].wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                for (_len = _args.length, params = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
                  params[_key - 1] = _args[_key];
                }

                _context.next = 3;
                return _axios["default"].post(this.apiAddress, {
                  jsonrpc: '2.0',
                  method: "Filecoin.".concat(method),
                  params: params,
                  id: 1
                }, _objectSpread({
                  headers: this.headers
                }, this.axiosOpts));

              case 3:
                _yield$axios$post = _context.sent;
                data = _yield$axios$post.data;
                throwIfErrors(data);
                return _context.abrupt("return", data.result);

              case 7:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function request(_x) {
        return _request.apply(this, arguments);
      }

      return request;
    }()
  }]);
  return LotusRpcEngine;
}();

exports["default"] = LotusRpcEngine;
//# sourceMappingURL=index.js.map