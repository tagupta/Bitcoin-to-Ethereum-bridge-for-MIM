"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createAssociatedTokenAccount = exports.getAssociatedTokenAddress = exports.ASSOCIATED_TOKEN_PROGRAM_ID = void 0;
const web3_js_1 = require("@solana/web3.js");
const TOKEN_PROGRAM_ID = new web3_js_1.PublicKey('TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA');
/** Program ID for the associated token account program. */
exports.ASSOCIATED_TOKEN_PROGRAM_ID = new web3_js_1.PublicKey('ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL');
/**
 * Derives the associated token address for the given wallet address and token mint.
 * @param owner Wallet address
 * @param mint Mint address
 */
async function getAssociatedTokenAddress(owner, mint) {
    const [address] = await web3_js_1.PublicKey.findProgramAddress([owner.toBuffer(), TOKEN_PROGRAM_ID.toBuffer(), mint.toBuffer()], exports.ASSOCIATED_TOKEN_PROGRAM_ID);
    return address;
}
exports.getAssociatedTokenAddress = getAssociatedTokenAddress;
/**
 * Instruction to create the associated token address for the given wallet address and token mint.
 *
 * @param payer Account to use to pay for fees
 * @param owner Wallet address for the new associated token address
 * @param mint Mint address for the new associated token address
 */
async function createAssociatedTokenAccount(payer, owner, mint) {
    const associatedTokenAddress = await getAssociatedTokenAddress(owner, mint);
    return new web3_js_1.TransactionInstruction({
        keys: [
            { pubkey: payer, isSigner: true, isWritable: true },
            { pubkey: associatedTokenAddress, isSigner: false, isWritable: true },
            { pubkey: owner, isSigner: false, isWritable: false },
            { pubkey: mint, isSigner: false, isWritable: false },
            { pubkey: web3_js_1.SystemProgram.programId, isSigner: false, isWritable: false },
            { pubkey: TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },
            { pubkey: web3_js_1.SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false },
        ],
        programId: exports.ASSOCIATED_TOKEN_PROGRAM_ID,
    });
}
exports.createAssociatedTokenAccount = createAssociatedTokenAccount;
//# sourceMappingURL=index.js.map