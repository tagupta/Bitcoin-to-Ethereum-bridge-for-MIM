/// <reference types="node" />
import { Connection, CreateSecp256k1InstructionWithEthAddressParams, TransactionInstruction, TransactionSignature } from "@solana/web3.js";
export declare const toBuffer: (arr: Buffer | Uint8Array | number[]) => Buffer;
/**
 * Create an secp256k1 instruction with an Ethereum address.
 *
 * We need to add an extra byte to the ethAddress to match our secp offset
 * */
export declare const createInstructionWithEthAddress2: (params: CreateSecp256k1InstructionWithEthAddressParams) => TransactionInstruction;
/**
 * Wait for a transaction to be confirmed, and then wait up to 20 seconds for it
 * to be finalized. Some wallets don't seem to return if you wait for a
 * transaction to be finalized, so we return after 20 seconds.
 */
export declare const finalizeTransaction: (connection: Connection, signature: TransactionSignature) => Promise<void>;
