/// <reference types="node" />
import { ContractCall, Logger, MintChain, OverwritableBurnAndReleaseParams, OverwritableLockAndMintParams, RenNetwork, RenNetworkDetails, RenNetworkString, SyncOrPromise } from "@renproject/interfaces";
import BigNumber from "bignumber.js";
import { EthereumBaseChain } from "./base";
import { EthereumConfig } from "./networks";
import { EthAddress, EthProvider, EthTransaction } from "./types";
import { EthereumTransactionConfig } from "./utils";
export declare class EthereumClass extends EthereumBaseChain implements MintChain<EthTransaction, EthAddress> {
    _getParams: ((asset: string, burnPayload?: string) => SyncOrPromise<OverwritableBurnAndReleaseParams | OverwritableLockAndMintParams | undefined>) | undefined;
    constructor(web3Provider: EthProvider, renNetwork?: RenNetwork | RenNetworkString | RenNetworkDetails | EthereumConfig, config?: {
        logger?: Logger;
    });
    getMintParams: (asset: string) => SyncOrPromise<OverwritableLockAndMintParams | undefined>;
    getBurnParams: (asset: string, burnPayload?: string | undefined) => SyncOrPromise<OverwritableBurnAndReleaseParams | undefined>;
    /** @category Main */
    Address: (address: string, txConfig?: EthereumTransactionConfig | undefined) => this;
    /** @category Main */
    Account: ({ value, address, }: {
        value?: string | number | BigNumber | undefined;
        address?: string | undefined;
    }, txConfig?: EthereumTransactionConfig | undefined) => this;
    /** @category Main */
    Contract: (contractCall: ContractCall | ((burnAddress: string, asset: string) => ContractCall)) => this;
    /** @category Main */
    Transaction: (transaction: EthTransaction) => this;
    /** @category Main */
    BurnNonce: (burnNonce: Buffer | string | number) => this;
    toWei: (value: BigNumber | string | number) => string;
    fromWei: (value: BigNumber | string | number) => string;
}
export declare type Ethereum = EthereumBaseChain;
export declare const Ethereum: import("@renproject/utils").CallableConstructor<typeof EthereumClass>;
