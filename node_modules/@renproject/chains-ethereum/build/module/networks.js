export const StandardExplorer = (baseUrl) => ({
    address: (address) => `${baseUrl.replace(/\/$/, "")}/address/${address}`,
    transaction: (transaction) => `${baseUrl.replace(/\/$/, "")}/tx/${transaction || ""}`,
});
const ethereumConfig = {
    mainnet: {
        chain: "main",
        isTestnet: false,
        chainLabel: "Ethereum",
        networkID: 1,
        publicProvider: ({ infura } = {}) => `https://mainnet.infura.io/v3/${infura || ""}`,
        explorer: StandardExplorer("https://etherscan.io"),
        /** @deprecated Renamed to publicProvider. Will be removed in 3.0.0. */
        infura: "https://mainnet.infura.io",
        /** @deprecated Renamed to explorer. Will be removed in 3.0.0. */
        etherscan: "https://etherscan.io",
    },
    kovan: {
        chain: "kovan",
        isTestnet: true,
        chainLabel: "Kovan",
        networkID: 42,
        publicProvider: ({ infura } = {}) => `https://kovan.infura.io/v3/${infura || ""}`,
        explorer: StandardExplorer("https://kovan.etherscan.io"),
        /** @deprecated Renamed to publicProvider. Will be removed in 3.0.0. */
        infura: "https://kovan.infura.io",
        /** @deprecated Renamed to explorer. Will be removed in 3.0.0. */
        etherscan: "https://kovan.etherscan.io",
    },
    rinkeby: {
        chain: "rinkeby",
        isTestnet: true,
        chainLabel: "Rinkeby",
        networkID: 4,
        publicProvider: ({ infura } = {}) => `https://rinkeby.infura.io/v3/${infura || ""}`,
        explorer: StandardExplorer("https://rinkeby.etherscan.io"),
        /** @deprecated Renamed to publicProvider. Will be removed in 3.0.0. */
        infura: "https://rinkeby.infura.io",
        /** @deprecated Renamed to explorer. Will be removed in 3.0.0. */
        etherscan: "https://rinkeby.etherscan.io",
    },
};
export const renMainnet = Object.assign(Object.assign({ name: "Mainnet" }, ethereumConfig.mainnet), { addresses: {
        GatewayRegistry: "0xe80d347DF1209a76DD9d2319d62912ba98C54DDD",
        BasicAdapter: "0x32666B64e9fD0F44916E1378Efb2CFa3B3B96e80",
    } });
export const renTestnet = Object.assign(Object.assign({ name: "Testnet" }, ethereumConfig.kovan), { addresses: {
        GatewayRegistry: "0x557e211EC5fc9a6737d2C6b7a1aDe3e0C11A8D5D",
        BasicAdapter: "0x7DDFA2e5435027f6e13Ca8Db2f32ebd5551158Bb",
    } });
export const renDevnet = Object.assign(Object.assign({ name: "Devnet v0.3" }, ethereumConfig.kovan), { addresses: {
        GatewayRegistry: "0x5045E727D9D9AcDe1F6DCae52B078EC30dC95455",
        BasicAdapter: "0xFABDB1F53Ef8B080332621cBc9F820a39e7A1B83",
    } });
export const renTestnetVDot3 = renTestnet;
export const renMainnetVDot3 = renMainnet;
export const renDevnetVDot3 = renDevnet;
//# sourceMappingURL=networks.js.map