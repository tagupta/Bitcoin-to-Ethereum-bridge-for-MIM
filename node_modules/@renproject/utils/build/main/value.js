"use strict";
/**
 * The `value` function converts between different cryptocurrency units.
 * See `value.spec.ts` for example usage.
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.fromSmallestUnit = exports.toSmallestUnit = void 0;
const bignumber_js_1 = __importDefault(require("bignumber.js"));
const toBigNumber = (valueIn) => bignumber_js_1.default.isBigNumber(valueIn)
    ? new bignumber_js_1.default(valueIn)
    : new bignumber_js_1.default(valueIn.toString());
const toSmallestUnit = (value, decimals) => toBigNumber(value)
    .times(new bignumber_js_1.default(10).exponentiatedBy(decimals))
    .decimalPlaces(0)
    .toFixed();
exports.toSmallestUnit = toSmallestUnit;
const fromSmallestUnit = (value, decimals) => toBigNumber(value)
    .dividedBy(new bignumber_js_1.default(10).exponentiatedBy(decimals))
    .toFixed();
exports.fromSmallestUnit = fromSmallestUnit;
//# sourceMappingURL=value.js.map