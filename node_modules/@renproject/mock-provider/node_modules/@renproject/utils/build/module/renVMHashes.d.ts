/// <reference types="node" />
import { EthArgs, Logger } from "@renproject/interfaces";
/**
 * Hash the payloads associated with a RenVM cross-chain transaction.
 *
 * @param zip An array (or spread) of parameters with with types defined.
 */
export declare const generatePHash: (zip: EthArgs, logger?: Logger) => Buffer;
export declare const generateSHash: (selector: string) => Buffer;
export declare const generateGHash: (payload: EthArgs, to: string, tokenIdentifier: string, nonce: Buffer, v2?: boolean | undefined, logger?: Logger) => Buffer;
export declare const generateNHash: (nonce: Buffer, txid: Buffer, txindex: string, v2?: boolean | undefined, logger?: Logger) => Buffer;
export declare const generateSighash: (pHash: Buffer, amount: number | string, to: string, tokenIdentifier: string, nonceHash: Buffer, v2?: boolean | undefined, logger?: Logger) => Buffer;
export declare const renVMHashToBase64: (txHash: string, v2?: boolean | undefined) => string;
export declare const generateBurnTxHash: (selector: string, encodedID: string, logger?: Logger) => Buffer;
