/// <reference types="node" />
import { PackStructType, TypedPackValue } from "./pack/pack";
import { RenVMType, RenVMValue } from "./value";
export interface TransactionInput<Input> {
    hash: string;
    version: string;
    selector: string;
    in: Input;
}
export interface TransactionOutput<Input, Output> extends TransactionInput<Input> {
    hash: string;
    out: Output;
}
export interface RPCValue<Types, Values> {
    t: Types;
    v: Values;
}
export declare type EmptyRPCStruct = RPCValue<{
    struct: [];
}, {}>;
export declare const burnParamsType: PackStructType;
export declare type BurnParams = RPCValue<typeof burnParamsType, {
    amount: RenVMValue<RenVMType.U256>;
    to: RenVMValue<RenVMType.Str>;
    nonce: RenVMValue<RenVMType.B32>;
}>;
export declare type BurnTransactionInput = TransactionInput<BurnParams>;
export declare const mintParamsType: () => PackStructType;
export declare type MintParams = RPCValue<typeof mintParamsType, {
    amount: RenVMValue<RenVMType.U256>;
    ghash: RenVMValue<RenVMType.B32>;
    gpubkey: RenVMValue<RenVMType.B>;
    nhash: RenVMValue<RenVMType.B32>;
    nonce: RenVMValue<RenVMType.B32>;
    payload: RenVMValue<RenVMType.B>;
    phash: RenVMValue<RenVMType.B32>;
    to: RenVMValue<RenVMType.Str>;
    txid: RenVMValue<RenVMType.B>;
    txindex: RenVMValue<RenVMType.U32>;
}>;
export declare type MintTransactionInput = TransactionInput<MintParams>;
export declare const submitGatewayType: () => PackStructType;
export declare type SubmitGateway = RPCValue<typeof submitGatewayType, {
    amount: RenVMValue<RenVMType.U256>;
    ghash: RenVMValue<RenVMType.B32>;
    gpubkey: RenVMValue<RenVMType.B>;
    nhash: RenVMValue<RenVMType.B32>;
    nonce: RenVMValue<RenVMType.B32>;
    payload: RenVMValue<RenVMType.B>;
    phash: RenVMValue<RenVMType.B32>;
    to: RenVMValue<RenVMType.Str>;
    txid: RenVMValue<RenVMType.B>;
    txindex: RenVMValue<RenVMType.U32>;
}>;
export interface SubmitGatewayInput {
    version: string;
    selector: string;
    in: SubmitGateway;
}
export declare const hashTransaction: (version: string, selector: string, packValue: TypedPackValue) => Buffer;
