import { UTXO, BitcoinAPI } from "./API";
export declare class InsightClass implements BitcoinAPI {
    url: string;
    constructor(url: string);
    fetchUTXOs: (address: string, confirmations?: number) => Promise<UTXO[]>;
    fetchTXs: (address: string, confirmations?: number) => Promise<UTXO[]>;
    fetchUTXO: (txHash: string, vOut: number) => Promise<UTXO>;
    broadcastTransaction: (txHex: string) => Promise<string>;
}
export declare type Insight = InsightClass;
export declare const Insight: import("@renproject/utils").CallableConstructor<typeof InsightClass>;
export interface ScriptSig {
    hex: string;
    asm: string;
}
export interface Vin {
    txid: string;
    vout: number;
    sequence: number;
    n: number;
    scriptSig: ScriptSig;
    addr: string;
    valueSat: number;
    value: number;
    doubleSpentTxID?: unknown;
}
export interface ScriptPubKey {
    hex: string;
    asm: string;
    addresses: string[];
    type: string;
}
export interface Vout {
    value: string;
    n: number;
    scriptPubKey: ScriptPubKey;
    spentTxId: string;
    spentIndex: number;
    spentHeight: number;
}
export interface TxResponse {
    txid: string;
    version: number;
    locktime: number;
    vin: Vin[];
    vout: Vout[];
    vjoinsplit: unknown[];
    blockhash: string;
    blockheight: number;
    confirmations: number;
    time: number;
    blocktime: number;
    valueOut: number;
    size: number;
    valueIn: number;
    fees: number;
    fOverwintered: boolean;
    nVersionGroupId: number;
    nExpiryHeight: number;
    valueBalance: number;
    spendDescs: unknown[];
    outputDescs: unknown[];
}
export interface FetchTXsResult {
    pagesTotal: number;
    txs: TxResponse[];
}
