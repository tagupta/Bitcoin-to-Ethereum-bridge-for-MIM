export var LockAndMintStatus;
(function (LockAndMintStatus) {
    LockAndMintStatus["Committed"] = "mint_committed";
    LockAndMintStatus["Deposited"] = "mint_deposited";
    LockAndMintStatus["Confirmed"] = "mint_confirmed";
    LockAndMintStatus["SubmittedToRenVM"] = "mint_submittedToRenVM";
    LockAndMintStatus["ReturnedFromRenVM"] = "mint_returnedFromRenVM";
    LockAndMintStatus["SubmittedToLockChain"] = "mint_submittedToLockChain";
    LockAndMintStatus["ConfirmedOnLockChain"] = "mint_confirmedOnLockChain";
    // Backwards compatibility
    LockAndMintStatus["SubmittedToEthereum"] = "mint_submittedToEthereum";
    LockAndMintStatus["ConfirmedOnEthereum"] = "mint_confirmedOnEthereum";
})(LockAndMintStatus || (LockAndMintStatus = {}));
export var BurnAndReleaseStatus;
(function (BurnAndReleaseStatus) {
    BurnAndReleaseStatus["Committed"] = "burn_committed";
    BurnAndReleaseStatus["SubmittedToLockChain"] = "burn_submittedToLockChain";
    BurnAndReleaseStatus["ConfirmedOnLockChain"] = "burn_confirmedOnLockChain";
    BurnAndReleaseStatus["SubmittedToRenVM"] = "burn_submittedToRenVM";
    BurnAndReleaseStatus["ReturnedFromRenVM"] = "burn_returnedFromRenVM";
    BurnAndReleaseStatus["NoBurnFound"] = "burn_noBurnFound";
    // Backwards compatibility
    BurnAndReleaseStatus["SubmittedToEthereum"] = "burn_submittedToEthereum";
    BurnAndReleaseStatus["ConfirmedOnEthereum"] = "burn_confirmedOnEthereum";
})(BurnAndReleaseStatus || (BurnAndReleaseStatus = {}));
export var TxStatus;
(function (TxStatus) {
    // TxStatusNil is used for transactions that have not been seen, or are
    // otherwise unknown.
    TxStatus["TxStatusNil"] = "nil";
    // TxStatusConfirming is used for transactions that are currently waiting
    // for their underlying blockchain transactions to be confirmed.
    TxStatus["TxStatusConfirming"] = "confirming";
    // TxStatusPending is used for transactions that are waiting for consensus
    // to be reached on when the transaction should be executed.
    TxStatus["TxStatusPending"] = "pending";
    // TxStatusExecuting is used for transactions that are currently being
    // executed.
    TxStatus["TxStatusExecuting"] = "executing";
    // TxStatusReverted is used for transactions that were reverted during
    // execution.
    TxStatus["TxStatusReverted"] = "reverted";
    // TxStatusDone is used for transactions that have been successfully
    // executed.
    TxStatus["TxStatusDone"] = "done";
})(TxStatus || (TxStatus = {}));
export const TxStatusIndex = {
    [TxStatus.TxStatusNil]: 0,
    [TxStatus.TxStatusConfirming]: 1,
    [TxStatus.TxStatusPending]: 2,
    [TxStatus.TxStatusExecuting]: 3,
    [TxStatus.TxStatusReverted]: 4,
    [TxStatus.TxStatusDone]: 5,
};
//# sourceMappingURL=types.js.map