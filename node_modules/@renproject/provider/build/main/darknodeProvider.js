"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DarknodeProvider = void 0;
const interfaces_1 = require("@renproject/interfaces");
const httpProvider_1 = require("./httpProvider");
const parseDarknodeMultiaddress = (url) => {
    try {
        const [, , ip, , port, ,] = url.split("/");
        const fixedPort = port === "18514" ? "18515" : port;
        // TODO: Use HTTPS if supported
        const protocol = "http";
        return `${protocol}://${ip}:${fixedPort}`;
    }
    catch (error) {
        throw new Error(`Malformatted address: ${url}`);
    }
};
class DarknodeProvider extends httpProvider_1.HttpProvider {
    constructor(multiAddress, logger = interfaces_1.NullLogger) {
        super(parseDarknodeMultiaddress(multiAddress), logger);
    }
}
exports.DarknodeProvider = DarknodeProvider;
//# sourceMappingURL=darknodeProvider.js.map