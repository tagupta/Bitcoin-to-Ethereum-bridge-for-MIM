/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ForceSend, ForceSendInterface } from "../ForceSend";

const _abi = [
  {
    constant: false,
    inputs: [
      {
        internalType: "address payable",
        name: "recipient",
        type: "address",
      },
    ],
    name: "send",
    outputs: [],
    payable: true,
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052348015600f57600080fd5b5060b08061001e6000396000f3fe608060405260043610601c5760003560e01c80633e58c58c146021575b600080fd5b606060048036036020811015603557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506062565b005b8073ffffffffffffffffffffffffffffffffffffffff16fffea265627a7a7231582054a683af4195bc603e8d31ad6cfe716855c85754de082b646ceff9cc13a0589a64736f6c63430005110032";

export class ForceSend__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ForceSend> {
    return super.deploy(overrides || {}) as Promise<ForceSend>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ForceSend {
    return super.attach(address) as ForceSend;
  }
  connect(signer: Signer): ForceSend__factory {
    return super.connect(signer) as ForceSend__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ForceSendInterface {
    return new utils.Interface(_abi) as ForceSendInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ForceSend {
    return new Contract(address, _abi, signerOrProvider) as ForceSend;
  }
}
