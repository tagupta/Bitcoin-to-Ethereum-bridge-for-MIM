{
  "fileName": "FinalizableCrowdsale.sol",
  "contractName": "FinalizableCrowdsale",
  "source": "pragma solidity ^0.5.0;\n\nimport \"@openzeppelin/upgrades/contracts/Initializable.sol\";\nimport \"../../math/SafeMath.sol\";\nimport \"../validation/TimedCrowdsale.sol\";\n\n/**\n * @title FinalizableCrowdsale\n * @dev Extension of TimedCrowdsale with a one-off finalization action, where one\n * can do extra work after finishing.\n */\ncontract FinalizableCrowdsale is Initializable, TimedCrowdsale {\n    using SafeMath for uint256;\n\n    bool private _finalized;\n\n    event CrowdsaleFinalized();\n\n    /**\n     * @return true if the crowdsale is finalized, false otherwise.\n     */\n    function finalized() public view returns (bool) {\n        return _finalized;\n    }\n\n    /**\n     * @dev Must be called after crowdsale ends, to do some extra finalization\n     * work. Calls the contract's finalization function.\n     */\n    function finalize() public {\n        require(!_finalized, \"FinalizableCrowdsale: already finalized\");\n        require(hasClosed(), \"FinalizableCrowdsale: not closed\");\n\n        _finalized = true;\n\n        _finalization();\n        emit CrowdsaleFinalized();\n    }\n\n    /**\n     * @dev Can be overridden to add finalization logic. The overriding function\n     * should call super._finalization() to ensure the chain of finalization is\n     * executed entirely.\n     */\n    function _finalization() internal {\n        // solhint-disable-previous-line no-empty-blocks\n    }\n\n    uint256[50] private ______gap;\n}\n",
  "sourcePath": "contracts/crowdsale/distribution/FinalizableCrowdsale.sol",
  "sourceMap": "323:1096:15:-;;;;;;;;;",
  "deployedSourceMap": "323:1096:15:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3113:23:14;3123:12;:10;:12::i;:::-;3113:9;:23::i;:::-;323:1096:15;2262:156:25;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2262:156:25;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3526:75:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3526:75:14;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3664:85;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3664:85:14;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1909:189:25;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1909:189:25;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1735:89;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1735:89:25;;;:::i;:::-;;;;;;;;;;;;;;;;;;;812:262:15;;8:9:-1;5:2;;;30:1;27;20:12;5:2;812:262:15;;;:::i;:::-;;3354:87:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3354:87:14;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;769:214:164;;8:9:-1;5:2;;;30:1;27;20:12;5:2;769:214:164;;;:::i;:::-;;572:82:15;;8:9:-1;5:2;;;30:1;27;20:12;5:2;572:82:15;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2396:389:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2396:389:14;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2396:389:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1581:89:25;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1581:89:25;;;:::i;:::-;;;;;;;;;;;;;;;;;;;991:525;;8:9:-1;5:2;;;30:1;27;20:12;5:2;991:525:25;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;991:525:25;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4006:605:14;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4006:605:14;;;;;;;;;;;;;;;;;;;:::i;:::-;;3202:76;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3202:76:14;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;867:96:1;912:15;946:10;939:17;;867:96;:::o;4006:605:14:-;1409:1:164;1392:13;;:18;;;;;;;;;;;1420:20;1443:13;;1420:36;;4084:17:14;4104:9;4084:29;;4123:44;4144:11;4157:9;4123:20;:44::i;:::-;4226:14;4243:26;4259:9;4243:15;:26::i;:::-;4226:43;;4317:25;4332:9;4317:10;;:14;;:25;;;;:::i;:::-;4304:10;:38;;;;4353:37;4370:11;4383:6;4353:16;:37::i;:::-;4435:11;4405:61;;4421:12;:10;:12::i;:::-;4405:61;;;4448:9;4459:6;4405:61;;;;;;;;;;;;;;;;;;;;;;;;4477:46;4500:11;4513:9;4477:22;:46::i;:::-;4534:15;:13;:15::i;:::-;4559:45;4581:11;4594:9;4559:21;:45::i;:::-;1466:1:164;;1501:13;;1485:12;:29;1477:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4006:605:14;;:::o;2262:156:25:-;2304:4;2399:12;;2381:15;:30;2374:37;;2262:156;:::o;3526:75:14:-;3563:7;3589:5;;3582:12;;3526:75;:::o;3664:85::-;3706:7;3732:10;;3725:17;;3664:85;:::o;1909:189:25:-;1948:4;2044:12;;2025:15;:31;;:66;;;;;2079:12;;2060:15;:31;;2025:66;2018:73;;1909:189;:::o;1735:89::-;1779:7;1805:12;;1798:19;;1735:89;:::o;812:262:15:-;858:10;;;;;;;;;;;857:11;849:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;930:11;:9;:11::i;:::-;922:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:4;989:10;;:17;;;;;;;;;;;;;;;;;;1017:15;:13;:15::i;:::-;1047:20;;;;;;;;;;812:262::o;3354:87:14:-;3393:15;3427:7;;;;;;;;;;;3420:14;;3354:87;:::o;769:214:164:-;1024:12:0;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;;;;;;1151:13;1129:35;;1174:14;1170:80;;;1213:4;1198:12;;:19;;;;;;;;;;;;;;;;;;1239:4;1225:11;;:18;;;;;;;;;;;;;;;;;;1170:80;975:1:164;959:13;:17;;;;1268:14:0;1264:55;;;1307:5;1292:12;;:20;;;;;;;;;;;;;;;;;;1264:55;769:214:164;:::o;572:82:15:-;614:4;637:10;;;;;;;;;;;630:17;;572:82;:::o;2396:389:14:-;1024:12:0;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;;;;;;1151:13;1129:35;;1174:14;1170:80;;;1213:4;1198:12;;:19;;;;;;;;;;;;;;;;;;1239:4;1225:11;;:18;;;;;;;;;;;;;;;;;;1170:80;2512:1:14;2505:4;:8;2497:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2574:1;2556:20;;:6;:20;;;;2548:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2662:1;2636:28;;2644:5;2636:28;;;;2628:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2724:4;2716:5;:12;;;;2748:6;2738:7;;:16;;;;;;;;;;;;;;;;;;2773:5;2764:6;;:14;;;;;;;;;;;;;;;;;;1268::0;1264:55;;;1307:5;1292:12;;:20;;;;;;;;;;;;;;;;;;1264:55;2396:389:14;;;;:::o;1581:89:25:-;1625:7;1651:12;;1644:19;;1581:89;:::o;991:525::-;1024:12:0;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;;;;;;1151:13;1129:35;;1174:14;1170:80;;;1213:4;1198:12;;:19;;;;;;;;;;;;;;;;;;1239:4;1225:11;;:18;;;;;;;;;;;;;;;;;;1170:80;1089:31:25;:29;:31::i;:::-;1082:39;;;;1209:15;1194:11;:30;;1186:94;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1365:11;1351;:25;1343:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1462:11;1447:12;:26;;;;1498:11;1483:12;:26;;;;1268:14:0;1264:55;;;1307:5;1292:12;;:20;;;;;;;;;;;;;;;;;;1264:55;991:525:25;;;:::o;3202:76:14:-;3240:6;3265;;;;;;;;;;;3258:13;;3202:76;:::o;2743:165:25:-;748:8;:6;:8::i;:::-;740:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2851:50;2878:11;2891:9;2851:26;:50::i;:::-;2743:165;;:::o;7619:120:14:-;7686:7;7712:20;7726:5;;7712:9;:13;;:20;;;;:::i;:::-;7705:27;;7619:120;;;:::o;834:176:46:-;892:7;911:9;927:1;923;:5;911:17;;951:1;946;:6;;938:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;995:8;;;834:176;;;;:::o;6821:134:14:-;6908:40;6923:11;6936;6908:14;:40::i;:::-;6821:134;;:::o;7225:145::-;;;:::o;7826:78::-;7870:7;;;;;;;;;;;:16;;:27;7887:9;7870:27;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7870:27:14;7826:78::o;5989:149::-;;;:::o;1283:98:15:-;:::o;1409:498:0:-;1456:4;1797:12;1820:4;1797:28;;1831:10;1876:4;1864:17;1858:23;;1901:1;1895:2;:7;1888:14;;;;1409:498;:::o;4617:159:14:-;4671:4;4704:1;4696:5;;:9;4695:38;;;;;4730:1;4711:21;;:7;;;;;;;;;;;:21;;;;4695:38;:73;;;;;4765:1;4738:29;;4746:6;;;;;;;;;;;4738:29;;;;4695:73;4687:82;;4617:159;:::o;5318:376::-;5443:1;5420:25;;:11;:25;;;;5412:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5523:1;5510:9;:14;;5502:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5318:376;;:::o;2159:459:46:-;2217:7;2463:1;2458;:6;2454:45;;;2487:1;2480:8;;;;2454:45;2509:9;2525:1;2521;:5;2509:17;;2553:1;2548;2544;:5;;;;;;:10;2536:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2610:1;2603:8;;;2159:459;;;;;:::o;6418:137:14:-;6503:45;6523:11;6536;6503:6;;;;;;;;;;;:19;;;;:45;;;;;:::i;:::-;6418:137;;:::o;662:174:138:-;744:85;763:5;793;:14;;;:23;;;;818:2;822:5;770:58;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;770:58:138;;;;;;;38:4:-1;29:7;25:18;67:10;61:17;96:58;199:8;192:4;186;182:15;179:29;167:10;160:49;0:215;;;770:58:138;744:18;:85::i;:::-;662:174;;;:::o;2666:1095::-;3261:27;3269:5;3261:25;;;:27::i;:::-;3253:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3395:12;3409:23;3444:5;3436:19;;3456:4;3436:25;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;3436:25:138;;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;3394:67:138;;;;3479:7;3471:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3558:1;3538:10;:17;:21;3534:221;;;3678:10;3667:30;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3667:30:138;;;;;;;;;;;;;;;;3659:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3534:221;2666:1095;;;;:::o;686:610:160:-;746:4;1004:16;1030:19;1052:66;1030:88;;;;1219:7;1207:20;1195:32;;1258:11;1246:8;:23;;:42;;;;;1285:3;1273:15;;:8;:15;;1246:42;1238:51;;;;686:610;;;:::o",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "hasClosed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "rate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "weiRaised",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOpen",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "closingTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "finalize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "wallet",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "finalized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "rate",
          "type": "uint256"
        },
        {
          "internalType": "address payable",
          "name": "wallet",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "openingTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "openingTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "closingTime",
          "type": "uint256"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "beneficiary",
          "type": "address"
        }
      ],
      "name": "buyTokens",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "CrowdsaleFinalized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "prevClosingTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newClosingTime",
          "type": "uint256"
        }
      ],
      "name": "TimedCrowdsaleExtended",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "purchaser",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "beneficiary",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokensPurchased",
      "type": "event"
    }
  ],
  "ast": {
    "absolutePath": "contracts/crowdsale/distribution/FinalizableCrowdsale.sol",
    "exportedSymbols": {
      "FinalizableCrowdsale": [
        2464
      ]
    },
    "id": 2465,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2407,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:15"
      },
      {
        "absolutePath": "@openzeppelin/upgrades/contracts/Initializable.sol",
        "file": "@openzeppelin/upgrades/contracts/Initializable.sol",
        "id": 2408,
        "nodeType": "ImportDirective",
        "scope": 2465,
        "sourceUnit": 69,
        "src": "25:60:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/math/SafeMath.sol",
        "file": "../../math/SafeMath.sol",
        "id": 2409,
        "nodeType": "ImportDirective",
        "scope": 2465,
        "sourceUnit": 5958,
        "src": "86:33:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/crowdsale/validation/TimedCrowdsale.sol",
        "file": "../validation/TimedCrowdsale.sol",
        "id": 2410,
        "nodeType": "ImportDirective",
        "scope": 2465,
        "sourceUnit": 3596,
        "src": "120:42:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2411,
              "name": "Initializable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 68,
              "src": "356:13:15",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Initializable_$68",
                "typeString": "contract Initializable"
              }
            },
            "id": 2412,
            "nodeType": "InheritanceSpecifier",
            "src": "356:13:15"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2413,
              "name": "TimedCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3595,
              "src": "371:14:15",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TimedCrowdsale_$3595",
                "typeString": "contract TimedCrowdsale"
              }
            },
            "id": 2414,
            "nodeType": "InheritanceSpecifier",
            "src": "371:14:15"
          }
        ],
        "contractDependencies": [
          68,
          98,
          2405,
          3595,
          15859
        ],
        "contractKind": "contract",
        "documentation": "@title FinalizableCrowdsale\n@dev Extension of TimedCrowdsale with a one-off finalization action, where one\ncan do extra work after finishing.",
        "fullyImplemented": true,
        "id": 2464,
        "linearizedBaseContracts": [
          2464,
          3595,
          2405,
          15859,
          98,
          68
        ],
        "name": "FinalizableCrowdsale",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 2417,
            "libraryName": {
              "contractScope": null,
              "id": 2415,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5957,
              "src": "398:8:15",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$5957",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "392:27:15",
            "typeName": {
              "id": 2416,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "411:7:15",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 2419,
            "name": "_finalized",
            "nodeType": "VariableDeclaration",
            "scope": 2464,
            "src": "425:23:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 2418,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "425:4:15",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 2421,
            "name": "CrowdsaleFinalized",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2420,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "479:2:15"
            },
            "src": "455:27:15"
          },
          {
            "body": {
              "id": 2428,
              "nodeType": "Block",
              "src": "620:34:15",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2426,
                    "name": "_finalized",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2419,
                    "src": "637:10:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2425,
                  "id": 2427,
                  "nodeType": "Return",
                  "src": "630:17:15"
                }
              ]
            },
            "documentation": "@return true if the crowdsale is finalized, false otherwise.",
            "id": 2429,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "finalized",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2422,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "590:2:15"
            },
            "returnParameters": {
              "id": 2425,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2424,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2429,
                  "src": "614:4:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2423,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "614:4:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "613:6:15"
            },
            "scope": 2464,
            "src": "572:82:15",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2454,
              "nodeType": "Block",
              "src": "839:235:15",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2434,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "857:11:15",
                        "subExpression": {
                          "argumentTypes": null,
                          "id": 2433,
                          "name": "_finalized",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2419,
                          "src": "858:10:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "46696e616c697a61626c6543726f776473616c653a20616c72656164792066696e616c697a6564",
                        "id": 2435,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "870:41:15",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_add3851407fb271b99f0a6c77295a889f6e9c9fd75a445c71c8bcc137e138dde",
                          "typeString": "literal_string \"FinalizableCrowdsale: already finalized\""
                        },
                        "value": "FinalizableCrowdsale: already finalized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_add3851407fb271b99f0a6c77295a889f6e9c9fd75a445c71c8bcc137e138dde",
                          "typeString": "literal_string \"FinalizableCrowdsale: already finalized\""
                        }
                      ],
                      "id": 2432,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        15985,
                        15986
                      ],
                      "referencedDeclaration": 15986,
                      "src": "849:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2436,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "849:63:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2437,
                  "nodeType": "ExpressionStatement",
                  "src": "849:63:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 2439,
                          "name": "hasClosed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3527,
                          "src": "930:9:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                            "typeString": "function () view returns (bool)"
                          }
                        },
                        "id": 2440,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "930:11:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "46696e616c697a61626c6543726f776473616c653a206e6f7420636c6f736564",
                        "id": 2441,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "943:34:15",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3248fca506ca48c5582f347404c127a5579310ae1e6ed4b284d29eb0ff216ace",
                          "typeString": "literal_string \"FinalizableCrowdsale: not closed\""
                        },
                        "value": "FinalizableCrowdsale: not closed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3248fca506ca48c5582f347404c127a5579310ae1e6ed4b284d29eb0ff216ace",
                          "typeString": "literal_string \"FinalizableCrowdsale: not closed\""
                        }
                      ],
                      "id": 2438,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        15985,
                        15986
                      ],
                      "referencedDeclaration": 15986,
                      "src": "922:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2442,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "922:56:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2443,
                  "nodeType": "ExpressionStatement",
                  "src": "922:56:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2446,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2444,
                      "name": "_finalized",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2419,
                      "src": "989:10:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 2445,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1002:4:15",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "989:17:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2447,
                  "nodeType": "ExpressionStatement",
                  "src": "989:17:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2448,
                      "name": "_finalization",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2459,
                      "src": "1017:13:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 2449,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1017:15:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2450,
                  "nodeType": "ExpressionStatement",
                  "src": "1017:15:15"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2451,
                      "name": "CrowdsaleFinalized",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2421,
                      "src": "1047:18:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 2452,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1047:20:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2453,
                  "nodeType": "EmitStatement",
                  "src": "1042:25:15"
                }
              ]
            },
            "documentation": "@dev Must be called after crowdsale ends, to do some extra finalization\nwork. Calls the contract's finalization function.",
            "id": 2455,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "finalize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2430,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "829:2:15"
            },
            "returnParameters": {
              "id": 2431,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "839:0:15"
            },
            "scope": 2464,
            "src": "812:262:15",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2458,
              "nodeType": "Block",
              "src": "1317:64:15",
              "statements": []
            },
            "documentation": "@dev Can be overridden to add finalization logic. The overriding function\nshould call super._finalization() to ensure the chain of finalization is\nexecuted entirely.",
            "id": 2459,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_finalization",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2456,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1305:2:15"
            },
            "returnParameters": {
              "id": 2457,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1317:0:15"
            },
            "scope": 2464,
            "src": "1283:98:15",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 2463,
            "name": "______gap",
            "nodeType": "VariableDeclaration",
            "scope": 2464,
            "src": "1387:29:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$50_storage",
              "typeString": "uint256[50]"
            },
            "typeName": {
              "baseType": {
                "id": 2460,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1387:7:15",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 2462,
              "length": {
                "argumentTypes": null,
                "hexValue": "3530",
                "id": 2461,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1395:2:15",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_50_by_1",
                  "typeString": "int_const 50"
                },
                "value": "50"
              },
              "nodeType": "ArrayTypeName",
              "src": "1387:11:15",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
                "typeString": "uint256[50]"
              }
            },
            "value": null,
            "visibility": "private"
          }
        ],
        "scope": 2465,
        "src": "323:1096:15"
      }
    ],
    "src": "0:1420:15"
  },
  "bytecode": "0x60806040526116be806100136000396000f3fe6080604052600436106100dd5760003560e01c80638129fc1c1161007f578063b7a8807c11610059578063b7a8807c146102fd578063e4a3011614610328578063ec8ac4d81461036d578063fc0c546a146103b1576100dd565b80638129fc1c1461023c578063b3f05b9714610253578063b4988fd014610282576100dd565b806347535d7b116100bb57806347535d7b146101745780634b6753bc146101a35780634bb278f3146101ce578063521eb273146101e5576100dd565b80631515bc2b146100ef5780632c4e722e1461011e5780634042b66f14610149575b6100ed6100e8610408565b610410565b005b3480156100fb57600080fd5b50610104610576565b604051808215151515815260200191505060405180910390f35b34801561012a57600080fd5b50610133610582565b6040518082815260200191505060405180910390f35b34801561015557600080fd5b5061015e61058c565b6040518082815260200191505060405180910390f35b34801561018057600080fd5b50610189610596565b604051808215151515815260200191505060405180910390f35b3480156101af57600080fd5b506101b86105b1565b6040518082815260200191505060405180910390f35b3480156101da57600080fd5b506101e36105bb565b005b3480156101f157600080fd5b506101fa6106ec565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561024857600080fd5b50610251610716565b005b34801561025f57600080fd5b5061026861081d565b604051808215151515815260200191505060405180910390f35b34801561028e57600080fd5b506102fb600480360360608110156102a557600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610834565b005b34801561030957600080fd5b50610312610b41565b6040518082815260200191505060405180910390f35b34801561033457600080fd5b5061036b6004803603604081101561034b57600080fd5b810190808035906020019092919080359060200190929190505050610b4b565b005b6103af6004803603602081101561038357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610410565b005b3480156103bd57600080fd5b506103c6610d19565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b600033905090565b60016033600082825401925050819055506000603354905060003490506104378382610d43565b600061044282610dcb565b905061045982606954610de990919063ffffffff16565b6069819055506104698482610e71565b8373ffffffffffffffffffffffffffffffffffffffff16610488610408565b73ffffffffffffffffffffffffffffffffffffffff167f6faf93231a456e552dbc9961f58d9713ee4f2e69d15f1975b050ef0911053a7b8484604051808381526020018281526020019250505060405180910390a36104e78483610e7f565b6104ef610e83565b6104f98483610eee565b50506033548114610572576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0081525060200191505060405180910390fd5b5050565b6000609d544211905090565b6000606854905090565b6000606954905090565b6000609c5442101580156105ac5750609d544211155b905090565b6000609d54905090565b60d060009054906101000a900460ff1615610621576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260278152602001806115ea6027913960400191505060405180910390fd5b610629610576565b61069b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f46696e616c697a61626c6543726f776473616c653a206e6f7420636c6f73656481525060200191505060405180910390fd5b600160d060006101000a81548160ff0219169083151502179055506106be610ef2565b7f9270cc390c096600a1c17c44345a1ba689fafd99d97487b10cfccf86cf73183660405160405180910390a1565b6000606760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600060019054906101000a900460ff16806107355750610734610ef4565b5b8061074c57506000809054906101000a900460ff16155b6107a1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001806115bc602e913960400191505060405180910390fd5b60008060019054906101000a900460ff1615905080156107f1576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b6001603381905550801561081a5760008060016101000a81548160ff0219169083151502179055505b50565b600060d060009054906101000a900460ff16905090565b600060019054906101000a900460ff16806108535750610852610ef4565b5b8061086a57506000809054906101000a900460ff16155b6108bf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001806115bc602e913960400191505060405180910390fd5b60008060019054906101000a900460ff16159050801561090f576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b60008411610985576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f43726f776473616c653a2072617465206973203000000000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610a0b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806116656025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610a91576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806115776024913960400191505060405180910390fd5b8360688190555082606760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081606660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508015610b3b5760008060016101000a81548160ff0219169083151502179055505b50505050565b6000609c54905090565b600060019054906101000a900460ff1680610b6a5750610b69610ef4565b5b80610b8157506000809054906101000a900460ff16155b610bd6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001806115bc602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015610c26576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b610c2e610f0b565b610c3457fe5b42831015610c8d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603381526020018061150d6033913960400191505060405180910390fd5b828211610ce5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260378152602001806115406037913960400191505060405180910390fd5b82609c8190555081609d819055508015610d145760008060016101000a81548160ff0219169083151502179055505b505050565b6000606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610d4b610596565b610dbd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f54696d656443726f776473616c653a206e6f74206f70656e000000000000000081525060200191505060405180910390fd5b610dc78282610fcd565b5050565b6000610de2606854836110ce90919063ffffffff16565b9050919050565b600080828401905083811015610e67576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b610e7b8282611154565b5050565b5050565b606760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f19350505050158015610eeb573d6000803e3d6000fd5b50565b5050565b565b6000803090506000813b9050600081149250505090565b600080606854118015610f6d5750600073ffffffffffffffffffffffffffffffffffffffff16606760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b8015610fc85750600073ffffffffffffffffffffffffffffffffffffffff16606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b905090565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611053576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180611611602a913960400191505060405180910390fd5b60008114156110ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f43726f776473616c653a20776569416d6f756e7420697320300000000000000081525060200191505060405180910390fd5b5050565b6000808314156110e1576000905061114e565b60008284029050828482816110f257fe5b0414611149576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602181526020018061159b6021913960400191505060405180910390fd5b809150505b92915050565b6111a18282606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166111a59092919063ffffffff16565b5050565b611271838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb905060e01b8484604051602401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611276565b505050565b6112958273ffffffffffffffffffffffffffffffffffffffff166114c1565b611307576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f5361666545524332303a2063616c6c20746f206e6f6e2d636f6e74726163740081525060200191505060405180910390fd5b600060608373ffffffffffffffffffffffffffffffffffffffff16836040518082805190602001908083835b602083106113565780518252602082019150602081019050602083039250611333565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d80600081146113b8576040519150601f19603f3d011682016040523d82523d6000602084013e6113bd565b606091505b509150915081611435576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656481525060200191505060405180910390fd5b6000815111156114bb5780806020019051602081101561145457600080fd5b81019080805190602001909291905050506114ba576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a81526020018061163b602a913960400191505060405180910390fd5b5b50505050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f915080821415801561150357506000801b8214155b9250505091905056fe54696d656443726f776473616c653a206f70656e696e672074696d65206973206265666f72652063757272656e742074696d6554696d656443726f776473616c653a206f70656e696e672074696d65206973206e6f74206265666f726520636c6f73696e672074696d6543726f776473616c653a20746f6b656e20697320746865207a65726f2061646472657373536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a656446696e616c697a61626c6543726f776473616c653a20616c72656164792066696e616c697a656443726f776473616c653a2062656e656669636961727920697320746865207a65726f20616464726573735361666545524332303a204552433230206f7065726174696f6e20646964206e6f74207375636365656443726f776473616c653a2077616c6c657420697320746865207a65726f2061646472657373a265627a7a723158208591167e6ffd4373deb505a545b7c6ea1efff0a68c59f03773862c3ec50b7ae564736f6c634300050b0032",
  "deployedBytecode": "0x6080604052600436106100dd5760003560e01c80638129fc1c1161007f578063b7a8807c11610059578063b7a8807c146102fd578063e4a3011614610328578063ec8ac4d81461036d578063fc0c546a146103b1576100dd565b80638129fc1c1461023c578063b3f05b9714610253578063b4988fd014610282576100dd565b806347535d7b116100bb57806347535d7b146101745780634b6753bc146101a35780634bb278f3146101ce578063521eb273146101e5576100dd565b80631515bc2b146100ef5780632c4e722e1461011e5780634042b66f14610149575b6100ed6100e8610408565b610410565b005b3480156100fb57600080fd5b50610104610576565b604051808215151515815260200191505060405180910390f35b34801561012a57600080fd5b50610133610582565b6040518082815260200191505060405180910390f35b34801561015557600080fd5b5061015e61058c565b6040518082815260200191505060405180910390f35b34801561018057600080fd5b50610189610596565b604051808215151515815260200191505060405180910390f35b3480156101af57600080fd5b506101b86105b1565b6040518082815260200191505060405180910390f35b3480156101da57600080fd5b506101e36105bb565b005b3480156101f157600080fd5b506101fa6106ec565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561024857600080fd5b50610251610716565b005b34801561025f57600080fd5b5061026861081d565b604051808215151515815260200191505060405180910390f35b34801561028e57600080fd5b506102fb600480360360608110156102a557600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610834565b005b34801561030957600080fd5b50610312610b41565b6040518082815260200191505060405180910390f35b34801561033457600080fd5b5061036b6004803603604081101561034b57600080fd5b810190808035906020019092919080359060200190929190505050610b4b565b005b6103af6004803603602081101561038357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610410565b005b3480156103bd57600080fd5b506103c6610d19565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b600033905090565b60016033600082825401925050819055506000603354905060003490506104378382610d43565b600061044282610dcb565b905061045982606954610de990919063ffffffff16565b6069819055506104698482610e71565b8373ffffffffffffffffffffffffffffffffffffffff16610488610408565b73ffffffffffffffffffffffffffffffffffffffff167f6faf93231a456e552dbc9961f58d9713ee4f2e69d15f1975b050ef0911053a7b8484604051808381526020018281526020019250505060405180910390a36104e78483610e7f565b6104ef610e83565b6104f98483610eee565b50506033548114610572576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0081525060200191505060405180910390fd5b5050565b6000609d544211905090565b6000606854905090565b6000606954905090565b6000609c5442101580156105ac5750609d544211155b905090565b6000609d54905090565b60d060009054906101000a900460ff1615610621576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260278152602001806115ea6027913960400191505060405180910390fd5b610629610576565b61069b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f46696e616c697a61626c6543726f776473616c653a206e6f7420636c6f73656481525060200191505060405180910390fd5b600160d060006101000a81548160ff0219169083151502179055506106be610ef2565b7f9270cc390c096600a1c17c44345a1ba689fafd99d97487b10cfccf86cf73183660405160405180910390a1565b6000606760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600060019054906101000a900460ff16806107355750610734610ef4565b5b8061074c57506000809054906101000a900460ff16155b6107a1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001806115bc602e913960400191505060405180910390fd5b60008060019054906101000a900460ff1615905080156107f1576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b6001603381905550801561081a5760008060016101000a81548160ff0219169083151502179055505b50565b600060d060009054906101000a900460ff16905090565b600060019054906101000a900460ff16806108535750610852610ef4565b5b8061086a57506000809054906101000a900460ff16155b6108bf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001806115bc602e913960400191505060405180910390fd5b60008060019054906101000a900460ff16159050801561090f576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b60008411610985576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f43726f776473616c653a2072617465206973203000000000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610a0b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806116656025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610a91576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806115776024913960400191505060405180910390fd5b8360688190555082606760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081606660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508015610b3b5760008060016101000a81548160ff0219169083151502179055505b50505050565b6000609c54905090565b600060019054906101000a900460ff1680610b6a5750610b69610ef4565b5b80610b8157506000809054906101000a900460ff16155b610bd6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001806115bc602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015610c26576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b610c2e610f0b565b610c3457fe5b42831015610c8d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603381526020018061150d6033913960400191505060405180910390fd5b828211610ce5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260378152602001806115406037913960400191505060405180910390fd5b82609c8190555081609d819055508015610d145760008060016101000a81548160ff0219169083151502179055505b505050565b6000606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610d4b610596565b610dbd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f54696d656443726f776473616c653a206e6f74206f70656e000000000000000081525060200191505060405180910390fd5b610dc78282610fcd565b5050565b6000610de2606854836110ce90919063ffffffff16565b9050919050565b600080828401905083811015610e67576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b610e7b8282611154565b5050565b5050565b606760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f19350505050158015610eeb573d6000803e3d6000fd5b50565b5050565b565b6000803090506000813b9050600081149250505090565b600080606854118015610f6d5750600073ffffffffffffffffffffffffffffffffffffffff16606760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b8015610fc85750600073ffffffffffffffffffffffffffffffffffffffff16606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b905090565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611053576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180611611602a913960400191505060405180910390fd5b60008114156110ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f43726f776473616c653a20776569416d6f756e7420697320300000000000000081525060200191505060405180910390fd5b5050565b6000808314156110e1576000905061114e565b60008284029050828482816110f257fe5b0414611149576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602181526020018061159b6021913960400191505060405180910390fd5b809150505b92915050565b6111a18282606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166111a59092919063ffffffff16565b5050565b611271838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb905060e01b8484604051602401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611276565b505050565b6112958273ffffffffffffffffffffffffffffffffffffffff166114c1565b611307576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f5361666545524332303a2063616c6c20746f206e6f6e2d636f6e74726163740081525060200191505060405180910390fd5b600060608373ffffffffffffffffffffffffffffffffffffffff16836040518082805190602001908083835b602083106113565780518252602082019150602081019050602083039250611333565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d80600081146113b8576040519150601f19603f3d011682016040523d82523d6000602084013e6113bd565b606091505b509150915081611435576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656481525060200191505060405180910390fd5b6000815111156114bb5780806020019051602081101561145457600080fd5b81019080805190602001909291905050506114ba576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a81526020018061163b602a913960400191505060405180910390fd5b5b50505050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f915080821415801561150357506000801b8214155b9250505091905056fe54696d656443726f776473616c653a206f70656e696e672074696d65206973206265666f72652063757272656e742074696d6554696d656443726f776473616c653a206f70656e696e672074696d65206973206e6f74206265666f726520636c6f73696e672074696d6543726f776473616c653a20746f6b656e20697320746865207a65726f2061646472657373536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a656446696e616c697a61626c6543726f776473616c653a20616c72656164792066696e616c697a656443726f776473616c653a2062656e656669636961727920697320746865207a65726f20616464726573735361666545524332303a204552433230206f7065726174696f6e20646964206e6f74207375636365656443726f776473616c653a2077616c6c657420697320746865207a65726f2061646472657373a265627a7a723158208591167e6ffd4373deb505a545b7c6ea1efff0a68c59f03773862c3ec50b7ae564736f6c634300050b0032",
  "compiler": {
    "name": "solc",
    "version": "0.5.11+commit.c082d0b4.Emscripten.clang",
    "optimizer": {
      "enabled": false,
      "runs": 200
    },
    "evmVersion": "petersburg"
  }
}
